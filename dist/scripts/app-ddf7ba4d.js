(function(){angular.module("manageUsers",["myUsersService","myInstitutesService","myAuthUserService","tsd.userSelector","tsd.horizontalFix","enterToTab","tsd.errorFilter"]).controller("ManageUsersCtrl",["$scope","$rootScope","$http","usersService","authUserService",function($scope,$rootScope,$http,usersService,authUserService){var self;self=this,this.users=[],this.filter={},$scope.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,usersService.getUsers(this.filter).then(function(users){return self.users=users}),$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},this.selectUser=function(user){return usersService.setSelectedUser(user)},this.isUserSelected=function(id){return null!=id?usersService.getSelectedUserId()===id:usersService.getSelectedUserId()},$scope.deleteUser=function(){return this.deleteButtonDisabled=!0,usersService.deleteUser().then(function(success){return usersService.getUsers(this.filter).then(function(users){return self.users=users}),self.deleteButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}).call(this),function(){angular.module("manageUsers").controller("UpdateUserCtrl",["$scope","$rootScope","$http","$filter","usersService","authUserService",function($scope,$rootScope,$http,$filter,usersService,authUserService){var self;self=this,this.updateButtonDisabled=!1,this.userData={},this.appUserId=authUserService.getUserData("userId"),this.checkPermission=function(permission){return authUserService.checkPermission(permission)},$scope.save=function($event){null!=$event&&"BUTTON"!==$event.target.nodeName&&($scope.$broadcast("show-errors-check-validity"),$scope.userDataForm.$valid?(self.updateButtonDisabled=!0,$http({url:"/updateUser",method:"PUT",data:{userData:self.userData}}).then(function(response){return null==response.data.user||response.data.err?BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):(BootstrapDialog.alert("User editiert"),$scope.$parent.closeLightbox("updated")),self.updateButtonDisabled=!1})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER}))},$rootScope.$on("selectedUser",function(){return self.userData=usersService.getSelectedUser(),null!=self.userData.institute&&(self.userData.institute=self.userData.institute._id),null}),null==self.userData._id&&(self.userData=usersService.getSelectedUser(),null!=self.userData.institute&&(self.userData.institute=self.userData.institute._id),self.appUserId===self.userData._id&&(self.ownUser=!0))}])}.call(this),function(){angular.module("manageUsers").controller("DetailUserCtrl",["$scope","$rootScope","usersService","institutesService","User",function($scope,$rootScope,usersService,institutesService,User){var self;self=this,this.user=User,$scope.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,null!=this.user.institute&&institutesService.getInstitutes({_id:this.user.institute._id}).then(function(institutes){return self.user.institute=institutes[0]}),$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},$scope.isUserSelected=function(id){return null!=id?usersService.getSelectedUserId()===id:usersService.getSelectedUserId()},$scope.deleteUser=function(){return this.deleteButtonDisabled=!0,usersService.deleteUser().then(function(success){return usersService.getUsers(this.filter).then(function(users){return self.users=users}),self.deleteButtonDisabled=!1})}}])}.call(this),function(){angular.module("manageImplants",["myImplantsService","myPatientsService","myAuthUserService","infinite-scroll","ui-rangeSlider","tsd.horizontalFix","tsd.excelExport","enterToTab","tsd.errorFilter","tsd.checkbox"]).controller("ManageImplantsCtrl",["$scope","$rootScope","$http","implantsService","authUserService",function($scope,$rootScope,$http,implantsService,authUserService){var self;self=this,this.implants=[],this.countImplants=null,this.filter={},this.showStep=20,this.showLimit=100-this.showStep,this.page=0,this.addMoreImplantsStatus=!0,this.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,implantsService.getImplantsFromDb(this.filter,this.page).then(function(implants){return self.implants=implants,self.countImplants=implantsService.getCountImplants()}),$rootScope.$on("filteredImplants",function(){return self.implants=implantsService.getImplants(),self.filter=implantsService.getFilter(),self.countImplants=implantsService.getCountImplants(),self.showLimit=100-self.showStep,self.page=0,self.addMoreImplantsStatus=!0}),this.addMoreImplants=function(){var oldImplantsLength;return this.addMoreImplantsStatus===!0&&(oldImplantsLength=this.implants.length,this.showLimit=this.showLimit+this.showStep,this.showLimit+this.showStep>=this.implants.length)?(this.page++,this.addMoreImplantsStatus=!1,implantsService.getImplantsFromDb(this.filter,this.page).then(function(implants){return self.implants=implants,implants.length>=oldImplantsLength+100?self.addMoreImplantsStatus=!0:void 0})):void 0},this.selectImplant=function(implant){return implantsService.setSelectedImplant(implant)},$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},this.isImplantSelected=function(id){return null!=id?implantsService.getSelectedImplantId()===id:implantsService.getSelectedImplantId()},$scope.deleteImplant=function(){return this.deleteButtonDisabled=!0,implantsService.deleteImplant().then(function(success){return implantsService.getImplantsFromDb(this.filter).then(function(implants){return self.implants=implants}),self.deleteButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("manageImplants").controller("UpdatePatientCtrl",["$scope","$rootScope","$http","$filter","patientsService",function($scope,$rootScope,$http,$filter,patientsService){var self;self=this,this.updateButtonDisabled=!1,this.patientData={},$scope.save=function($event){null!=$event&&"BUTTON"!==$event.target.nodeName&&($scope.$broadcast("show-errors-check-validity"),$scope.patientDataForm.$valid?(self.updateButtonDisabled=!0,$http({url:"/updatePatient",method:"PUT",data:{patientData:self.patientData}}).then(function(response){return null==response.data.patient||response.data.err?BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):(BootstrapDialog.alert("Patient editiert"),$scope.$parent.closeLightbox("updated")),self.updateButtonDisabled=!1})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER}))},$rootScope.$on("selectedPatient",function(){return console.log("getting patient data"),self.patientData=patientsService.getSelectedPatient(),null!=self.patientData.patient&&(self.patientData.patient=self.patientData.patient._id),console.log(self.patientData)})}])}.call(this),function(){angular.module("managePatients",["myPatientsService","myImplantsService","myInstitutesService","myAuthUserService","tsd.patientSelector","tsd.horizontalFix","enterToTab","tsd.errorFilter","tsd.checkbox"]).controller("ManagePatientsCtrl",["$scope","$rootScope","$http","patientsService","authUserService",function($scope,$rootScope,$http,patientsService,authUserService){var self;self=this,this.patients=[],this.filter={},$scope.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,patientsService.getPatientsFromDb(this.filter).then(function(patients){return self.patients=patients}),$rootScope.$on("filteredPatients",function(){return self.patients=patientsService.getPatients(),self.filter=patientsService.getFilter()}),this.selectPatient=function(patient){return patientsService.setSelectedPatient(patient)},$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},this.isPatientSelected=function(id){return null!=id?patientsService.getSelectedPatientId()===id:patientsService.getSelectedPatientId()},$scope.deletePatient=function(){return $scope.deleteButtonDisabled=!0,patientsService.deletePatient().then(function(success){return patientsService.getPatientsFromDb(this.filter).then(function(patients){return self.patients=patients}),$scope.deleteButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("managePatients").controller("SearchPatientsCtrl",["$scope","$rootScope","patientsService","authUserService",function($scope,$rootScope,patientsService,authUserService){var self;self=this,this.searchButtonDisabled=!1,this.patientData={},this.filter=function(){return this.searchButtonDisabled=!0,patientsService.getPatientsFromDb(this.patientData,0).then(function(patients){return $rootScope.$broadcast("filteredPatients"),self.searchButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("manageImplants").controller("DetailPatientCtrl",["$scope","$rootScope","patientsService","institutesService","implantsService","Patient",function($scope,$rootScope,patientsService,institutesService,implantsService,Patient){var self;self=this,this.patient=Patient,$scope.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,institutesService.getInstitutes({_id:this.patient.institute._id}).then(function(institutes){return self.patient.institute=institutes[0]}),implantsService.getImplantsFromDb({patient:this.patient._id}).then(function(implants){return self.patient.implants=implants}),patientsService.setSelectedPatient(this.patient),$scope.openLightbox=function(){return $rootScope.$broadcast("selectedPatient"),$("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},$scope.isPatientSelected=function(id){return null!=id?patientsService.getSelectedPatientId()===id:patientsService.getSelectedPatientId()},$scope.deletePatient=function(){return $scope.deleteButtonDisabled=!0,patientsService.deletePatient().then(function(success){return $scope.deleteButtonDisabled=!1})}}])}.call(this),function(){angular.module("manageLogs",["myLogsService","myAuthUserService","enterToTab","tsd.errorFilter"]).controller("ManageLogsCtrl",["$scope","$rootScope","$http","logsService","authUserService",function($scope,$rootScope,$http,logsService,authUserService){var self;self=this,this.logs=[],this.filter={},logsService.getLogsFromDb(this.filter).then(function(logs){return self.logs=logs}),$rootScope.$on("filteredLogs",function(){return self.logs=logsService.getLogs(),self.filter=logsService.getFilter()}),this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("manageLogs").controller("SearchLogsCtrl",["$scope","$rootScope","logsService","authUserService",function($scope,$rootScope,logsService,authUserService){var self;self=this,this.searchButtonDisabled=!1,this.logData={},this.customersList=[],this.modelsList=[],this.attributesList=[],this.getLogsCustomersList=function(){return logsService.getLogsCustomersList(this.logData).then(function(customers){return self.customersList=customers})},this.getLogsModelsList=function(){return logsService.getLogsModelsList(this.logData).then(function(models){return self.modelsList=models})},this.getLogsAttributesList=function(){return logsService.getLogsAttributesList(this.logData).then(function(attributes){return self.attributesList=attributes})},this.filter=function(){return this.searchButtonDisabled=!0,logsService.getLogsFromDb(this.logData,0).then(function(logs){return $rootScope.$broadcast("filteredLogs"),self.searchButtonDisabled=!1})},this.resetFilter=function(){return this.logData={},this.filter()},this.checkPermission=function(permission){return authUserService.checkPermission(permission)},this.getLogsCustomersList(),this.getLogsModelsList(),this.getLogsAttributesList()}])}.call(this),function(){angular.module("manageInstitutes",["myInstitutesService","myAuthUserService","tsd.horizontalFix","enterToTab","ui.router","tsd.errorFilter","tsd.checkbox"]).controller("ManageInstitutesCtrl",["$scope","$rootScope","$http","institutesService","authUserService",function($scope,$rootScope,$http,institutesService,authUserService){var self;self=this,this.institutes=[],this.filter={},this.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,institutesService.getInstitutes(this.filter).then(function(institutes){return self.institutes=institutes}),$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},this.selectInstitute=function(institute){return institutesService.setSelectedInstitute(institute)},this.isInstituteSelected=function(id){return null!=id?institutesService.getSelectedInstituteId()===id:institutesService.getSelectedInstituteId()},this.deleteInstitute=function(){return this.deleteButtonDisabled=!0,institutesService.deleteInstitute().then(function(success){return institutesService.getInstitutes(this.filter).then(function(institutes){return self.institutes=institutes}),self.deleteButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("manageInstitutes").controller("UpdateInstituteCtrl",["$scope","$rootScope","$http","$filter","institutesService",function($scope,$rootScope,$http,$filter,institutesService){var self;self=this,this.updateButtonDisabled=!1,this.instituteData={},$scope.save=function($event){null!=$event&&"BUTTON"!==$event.target.nodeName&&($scope.$broadcast("show-errors-check-validity"),$scope.instituteDataForm.$valid?(self.updateButtonDisabled=!0,$http({url:"/updateInstitute",method:"PUT",data:{instituteData:self.instituteData}}).then(function(response){return null==response.data.institute||response.data.err?BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):(BootstrapDialog.alert("Klinik editiert"),$scope.$parent.closeLightbox("updated")),self.updateButtonDisabled=!1})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER}))},$rootScope.$on("selectedInstitute",function(){return self.instituteData=institutesService.getSelectedInstitute()}),null==self.instituteData._id&&(self.instituteData=institutesService.getSelectedInstitute())}])}.call(this),function(){angular.module("manageInstitutes").controller("DetailInstituteCtrl",["$scope","$rootScope","institutesService","Institute",function($scope,$rootScope,institutesService,Institute){var self;self=this,this.institute=Institute,$scope.updateLightbox={},$scope.updateLightbox.active=!1,$scope.openLightbox=function(){return $("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},$scope.isInstituteSelected=function(id){return null!=id?institutesService.getSelectedInstituteId()===id:institutesService.getSelectedInstituteId()}}])}.call(this),function(){angular.module("manageImplants").controller("UpdateImplantCtrl",["$scope","$rootScope","$state","$http","$filter","implantsService","eprdValuesService","authUserService",function($scope,$rootScope,$state,$http,$filter,implantsService,eprdValuesService,authUserService){var self;self=this,this.updateButtonDisabled=!1,this.implantData={},this.coWorkers=[],implantsService.getBodyParts(function(err,bodyParts){var ref;return self.bodyParts=bodyParts,null==self.implantData.bodyPart&&(self.implantData.bodyPart="Hüfte"),null==(null!=(ref=self.implantData.eprd)?ref.gelenk:void 0)?self.implantData.eprd=eprdValuesService.getEprdDefaults():void 0}),this.eprdPatient=null,this.showEprdOptions=!1,authUserService.checkPermission(["superAdmin","institute"])&&implantsService.getCoWorkers().then(function(coWorkers){return self.coWorkers=coWorkers,coWorkers.length>0?self.instituteName=coWorkers[0].institute.name:void 0}),implantsService.getImplanter().then(function(response){return self.implantData.creator=response.creator,self.implantData.institute=response.institute}),$scope.$watch(angular.bind(self,function(){return self.eprdPatient}),function(newVal,oldVal){return console.log("eprdPatient changed from "+oldVal+" to "+newVal),null!==newVal?self.checkEprdShow():void 0}),$scope.$watch(angular.bind(self,function(){return self.showEprdOptions}),function(newVal,oldVal){return newVal===!0&&oldVal!==!0?(self.eprdValues=eprdValuesService.getEprdValues(),self.implantData.eprd=eprdValuesService.getEprdDefaults()):void 0}),this.setControllDate=function(){var currentMonth,now;return now=new Date,currentMonth=now.getMonth(),now.setMonth(now.getMonth()+parseInt(this.datePreset)),now.getMonth()!==(currentMonth+this.datePreset)%12&&now.setDate(0),this.implantData.controllDate=now},this.updateEprd=function(){return implantsService.updateEprd(self.implantData,self.eprdPatient,function(implantData,showEprdOptions){return self.implantData=implantData,self.showEprdOptions=showEprdOptions})},this.checkEprdShow=function(){return implantsService.checkEprdShow(self.implantData,self.eprdPatient,function(implantData,showEprdOptions){return self.implantData=implantData,self.showEprdOptions=showEprdOptions,console.log("self.showEprdOptions "+self.showEprdOptions)})},$scope.save=function($event){null!=$event&&"BUTTON"!==$event.target.nodeName&&($scope.$broadcast("show-errors-check-validity"),$scope.implantDataForm.$valid?(self.updateButtonDisabled=!0,$http({url:"/updateImplant",method:"PUT",data:{implantData:self.implantData}}).then(function(response){return null==response.data.implant||response.data.err?BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):(BootstrapDialog.alert("Implantat editiert"),$scope.$parent.closeLightbox("updated"),$state.go($state.current,{},{reload:!0})),self.updateButtonDisabled=!1})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER}))},$rootScope.$on("selectedImplant",function(){return self.implantData=implantsService.getSelectedImplant(),null!=self.implantData.implant?self.implantData.implant=self.implantData.implant._id:void 0}),this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("manageImplants").controller("SearchImplantsCtrl",["$scope","$rootScope","implantsService","authUserService",function($scope,$rootScope,implantsService,authUserService){var self;self=this,this.searchButtonDisabled=!1,this.implantData={},this.artsList=[],this.manufacturerList=[],this.modelsList=[],this.typesList=[],this.serialRange={min:1e6,max:9e6},this.implantData.serialMinRange=this.serialRange.min,this.implantData.serialMaxRange=this.serialRange.max,this.lotRange={min:1e6,max:9e6},this.implantData.lotMinRange=this.lotRange.min,this.implantData.lotMaxRange=this.lotRange.max,this.searchIntervallOptions=implantsService.buildDateSelectOptions(),this.updateArt=function(){return""===this.implantData.art&&delete this.implantData.art,self.manufacturersList=[],self.modelsList=[],self.typesList=[],delete self.implantData.manufacturer,delete self.implantData.model,delete self.implantData.type,this.getManufacturersList(),this.getSerialRangeMinMax(),this.getLotRangeMinMax()},this.updateManufacturer=function(){return this.getModelsList(),this.getSerialRangeMinMax(),this.getLotRangeMinMax()},this.updateModel=function(){return this.getTypesList(),this.getSerialRangeMinMax(),this.getLotRangeMinMax()},this.updatetype=function(){return this.getSerialRangeMinMax(),this.getLotRangeMinMax()},this.getArtsList=function(){return implantsService.getArtsList(this.implantData).then(function(arts){return self.artsList=arts})},this.getManufacturersList=function(){return self.modelsList=[],self.typesList=[],delete self.implantData.manufacturer,delete self.implantData.model,delete self.implantData.type,implantsService.getManufacturersList(this.implantData).then(function(manufacturers){return self.manufacturersList=manufacturers})},this.getModelsList=function(){return self.typesList=[],delete self.implantData.model,delete self.implantData.type,implantsService.getModelsList(this.implantData).then(function(models){return self.modelsList=models})},this.getTypesList=function(){return delete self.implantData.type,implantsService.getTypesList(this.implantData).then(function(types){return self.typesList=types})},this.getSerialRangeMinMax=function(){return implantsService.getSerialRangeMinMax(this.implantData).then(function(serialRange){return self.serialRange.min=serialRange.min,self.serialRange.max=serialRange.max,self.implantData.serialMinRange=self.serialRange.min,self.implantData.serialMaxRange=self.serialRange.max})},this.getLotRangeMinMax=function(){return implantsService.getLotRangeMinMax(this.implantData).then(function(lotRange){return self.lotRange.min=lotRange.min,self.lotRange.max=lotRange.max,self.implantData.lotMinRange=self.lotRange.min,self.implantData.lotMaxRange=self.lotRange.max})},this.setSerialNr=function(type){var ref,ref1,ref2;if("min"===type&&this.serialRange.min<=(ref=this.implantData.serialMinRange)&&ref<=this.serialRange.max);else{if("min"===type&&""===this.implantData.serialMinRange)return this.implantData.serialMinRange=this.serialRange.min;if("max"===type&&this.serialRange.min<=(ref1=this.implantData.serialMaxRange)&&ref1<=this.serialRange.max);else{if("max"===type&&""===this.implantData.serialMaxRange)return this.implantData.serialMaxRange=this.serialRange.max;if("check"!==type||null===this.implantData.serialMinRange)return console.log(this.serialRange.min<=(ref2=this.implantData.serialMinRange)&&ref2<=this.serialRange.max,this.serialRange.min,this.implantData.serialMinRange,this.serialRange.max),BootstrapDialog.alert({title:"Seriennummer nicht vorhanden",message:"Bite Seriennummer zwischen "+this.serialRange.min+" und "+this.serialRange.max+" wählen,",type:BootstrapDialog.TYPE_DANGER});if(this.specificSerialNr)return this.implantData.serialMaxRange=this.implantData.serialMinRange}}},this.setLotNr=function(type){var ref,ref1,ref2;if("min"===type&&this.lotRange.min<=(ref=this.implantData.lotMinRange)&&ref<=this.lotRange.max);else{if("min"===type&&""===this.implantData.lotMinRange)return this.implantData.lotMinRange=this.lotRange.min;if("max"===type&&this.lotRange.min<=(ref1=this.implantData.lotMaxRange)&&ref1<=this.lotRange.max);else{if("max"===type&&""===this.implantData.lotMaxRange)return this.implantData.lotMaxRange=this.lotRange.max;if("check"!==type||null===this.implantData.lotMinRange)return console.log(this.lotRange.min<=(ref2=this.implantData.lotMinRange)&&ref2<=this.lotRange.max,this.lotRange.min,this.implantData.lotMinRange,this.lotRange.max),BootstrapDialog.alert({title:"Seriennummer nicht vorhanden",message:"Bite Losnummer zwischen "+this.lotRange.min+" und "+this.lotRange.max+" wählen,",type:BootstrapDialog.TYPE_DANGER});if(this.specificLotNr)return this.implantData.lotMaxRange=this.implantData.lotMinRange}}},this.filter=function(){return this.searchButtonDisabled=!0,implantsService.getImplantsFromDb(this.implantData,0).then(function(implants){return $rootScope.$broadcast("filteredImplants"),self.searchButtonDisabled=!1})},this.resetFilter=function(){return this.implantData={},this.filter()},this.checkPermission=function(permission){return authUserService.checkPermission(permission)},this.getArtsList(),this.getManufacturersList(),this.getSerialRangeMinMax(),this.getLotRangeMinMax()}])}.call(this),function(){angular.module("manageImplants").controller("DownloadsImplantCtrl",["$scope","$rootScope","patientsService","implantsService","Implant","authUserService",function($scope,$rootScope,patientsService,implantsService,Implant,authUserService){var self;self=this,this.implant=Implant,patientsService.getPatientsFromDb({_id:this.implant.patient._id}).then(function(patients){return self.implant.patient=patients[0]}),this.selectImplant=function(implant){return implantsService.setSelectedImplant(implant),$rootScope.$broadcast("selectedImplant")},this.getImplantCard=function(){return console.log("yeah"),implantsService.getImplantCard()},this.checkPermission=function(permission){return authUserService.checkPermission(permission)},this.selectImplant(this.implant)}])}.call(this),function(){angular.module("manageImplants").controller("DetailImplantCtrl",["$scope","$rootScope","patientsService","implantsService","Implant","authUserService",function($scope,$rootScope,patientsService,implantsService,Implant,authUserService){var self;self=this,this.implant=Implant,$scope.deleteButtonDisabled=!1,$scope.updateLightbox={},$scope.updateLightbox.active=!1,patientsService.getPatientsFromDb({_id:this.implant.patient._id}).then(function(patients){return self.implant.patient=patients[0]}),implantsService.setSelectedImplant(this.implant),$scope.openLightbox=function(){return $rootScope.$broadcast("selectedImplant"),$("body").addClass("noscroll"),$scope.updateLightbox.active=!0},$scope.closeLightbox=function($event){return null!=(null!=$event?$event.target:void 0)&&"lightbox-outer-wrapper"===$event.target.id||"updated"===$event?($("body").removeClass("noscroll"),$scope.updateLightbox.active=!1):void 0},$scope.isImplantSelected=function(id){return null!=id?implantsService.getSelectedImplantId()===id:implantsService.getSelectedImplantId()},$scope.deleteImplant=function(){return $scope.deleteButtonDisabled=!0,implantsService.deleteImplant().then(function(success){return $scope.deleteButtonDisabled=!1})},this.checkPermission=function(permission){return authUserService.checkPermission(permission)}}])}.call(this),function(){angular.module("registerUsers",["myAuthUserService","myInstitutesService","tsd.errorFilter"]).controller("RegisterUserCtrl",["$scope","$http","$stateParams","$state","$filter","institutesService","authUserService",function($scope,$http,$stateParams,$state,$filter,institutesService,authUserService){var self;self=this,this.userData={},this.userData.permissionLevel="employee",this.buttonDisabled=!1,this.institutes=[],institutesService.getInstitutes({}).then(function(response){return self.institutes=response,self.userData.institute=self.institutes[0]._id}),$scope.predicate="lastName",$scope.reverse=!0,authUserService.userDummies()&&(this.userData.gender="Herr",this.userData.field="Chirurgie",this.userData.firstName="Andi XOXOXOXOXOOXO",this.userData.lastName="Giga",this.userData.telephone="089716552",this.userData.mobile="01728763533",this.userData.email="hallo@vierhundertvier.com",this.userData.street="St. Anna Str. 12",this.userData.zipcode="80538",this.userData.city="München"),null!=$stateParams&&null!=$stateParams.instituteId&&(this.userData.permissionLevel="institute",this.userData.institute=$stateParams.instituteId),this.checkPermission=function(permission){return authUserService.checkPermission(permission)},$scope.save=function(){$scope.$broadcast("show-errors-check-validity"),$scope.userDataForm.$valid?(this.buttonDisabled=!0,$http({url:"/createUser",method:"POST",data:{userData:self.userData}}).then(function(response){return null==response.data.userId||response.data.err?(self.buttonDisabled=!1,BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER})):(BootstrapDialog.alert("Neuer User angelegt"),$state.go("root.menu"))})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("registerPatients",["tsd.errorFilter","tsd.checkbox","myAuthUserService"]).controller("RegisterPatientCtrl",["$scope","$http","$state","$filter","authUserService",function($scope,$http,$state,$filter,authUserService){var self;self=this,this.patientData={},this.buttonDisabled=!1,this.patientData.saveDate=new Date,this.patientData.sendToVitabook=!0,this.buttonText=null!=$state.params.previousRoute&&"root.registerImplantat"===$state.params.previousRoute?"Patient erfassen und zurück zum Implantat":"Patient erfassen",authUserService.userDummies()&&(this.patientData.patientId="12342233444",this.patientData.gender="Herr",this.patientData.lastName="Giga",this.patientData.firstName="Andi",this.patientData.implantCardNr="989876554654",this.patientData.implantCardSecurity="123",this.patientData.birthdate=new Date("12.05.1985"),this.patientData.insurance="0104940005",this.patientData.insurant="123443333333",this.patientData.telephone="089716552",this.patientData.mobile="01728763533",this.patientData.email="a.geissinger@gmx.de",this.patientData.street="St. Anna Str. 12",this.patientData.zipcode="80538",this.patientData.city="München"),$scope.save=function(){$scope.$broadcast("show-errors-check-validity"),$scope.patientDataForm.$valid?(this.buttonDisabled=!0,null!=$state.params.previousRoute&&(self.patientData.previousRoute=$state.params.previousRoute),$http({url:"/createPatient",method:"POST",data:{patientData:self.patientData}}).then(function(response){return null==response.data.patientId||response.data.err?(self.buttonDisabled=!1,BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER})):null!=$state.params.previousRoute?(console.log($state.params.previousRoute),$state.go($state.params.previousRoute,{previousRoute:"root.registerPatient"})):$state.go("root.menu")})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("registerInstitutes",["tsd.errorFilter","tsd.checkbox","myAuthUserService"]).controller("RegisterInstituteCtrl",["$scope","$http","$state","$filter","authUserService",function($scope,$http,$state,$filter,authUserService){var self;self=this,this.instituteData={},this.buttonDisabled=!1,this.instituteData.sendToVitabook=!0,authUserService.userDummies()&&(this.instituteData.baseUrl="http://localhost:8080",this.instituteData.vitabookId=123456780,this.instituteData.instituteNr="123456780",this.instituteData.city="München",
this.instituteData.name="Neue Klinik",this.instituteData.telephone="+4987823763",this.instituteData.email="neueKlinik@autofokus-marketing.de",this.instituteData.zipcode=89098,this.instituteData.street="Checkpoint Charlie",this.instituteData.city="München",this.instituteData.eprdClientNr="123456780-1",this.instituteData.eprdClientLizenz="5692-4979-2441-1371",this.instituteData.locationNr="00",this.instituteData.unitNr=1),$scope.save=function(){$scope.$broadcast("show-errors-check-validity"),$scope.instituteDataForm.$valid?(self.buttonDisabled=!0,$http({url:"/createInstitute",method:"POST",data:{instituteData:self.instituteData}}).then(function(response){return null!=response.data.instituteId&&null==response.data.err?(BootstrapDialog.alert("Neues Klinik angelegt"),$state.go("root.registerUser",{instituteId:response.data.instituteId})):(self.buttonDisabled=!1,BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}))})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("registerImplants",["myImplantsService","myEprdValuesService","myAuthUserService","enterToTab","tsd.patientSelector","tsd.userSelector","tsd.autocompleteImplant","tsd.errorFilter","tsd.checkbox"]).controller("RegisterImplantCtrl",["$scope","$rootScope","$http","$stateParams","$state","$filter","Patient","ImplantData","ImplantsFromPreviousOperations","implantsService","eprdValuesService","authUserService",function($scope,$rootScope,$http,$stateParams,$state,$filter,Patient,ImplantData,ImplantsFromPreviousOperations,implantsService,eprdValuesService,authUserService){var self;self=this,this.eprdPatient=null,this.showEprdOptions=!1,console.log("root.registerPatient"===$state.params.previousRoute,$state.params,$stateParams),this.highlight="root.registerPatient"===$state.params.previousRoute,null===ImplantData?(this.implantData={},this.implantData.saveDate=new Date,this.implantData.imOrExplant="Implant"):this.implantData=ImplantData,implantsService.getBodyParts(function(err,bodyParts){var ref;return self.bodyParts=bodyParts,null==self.implantData.bodyPart&&(self.implantData.bodyPart="Hüfte"),null==(null!=(ref=self.implantData.eprd)?ref.gelenk:void 0)?self.implantData.eprd=eprdValuesService.getEprdDefaults():void 0}),this.implantsFromPreviousOperations=ImplantsFromPreviousOperations,this.datePreset=null,this.buttonDisabled=!1,this.coWorkers=[],null!==Patient&&(this.implantData.patient=Patient._id,this.patient=Patient),null==this.implantData.art&&authUserService.userDummies()&&(this.implantData=implantsService.getDummies(this.implantData,$stateParams.operationId)),authUserService.checkPermission(["superAdmin","institute"])&&implantsService.getCoWorkers().then(function(coWorkers){return self.coWorkers=coWorkers,coWorkers.length>0?self.instituteName=coWorkers[0].institute.name:void 0}),implantsService.getImplanter().then(function(response){return self.implantData.newCreator=response.creator,self.implantData.institute=response.institute}),$scope.$watch(angular.bind(self,function(){return self.eprdPatient}),function(newVal,oldVal){return null!==newVal?self.checkEprdShow():void 0}),$scope.$watch(angular.bind(self,function(){return self.showEprdOptions}),function(newVal,oldVal){return newVal===!0&&oldVal!==!0?(self.eprdValues=eprdValuesService.getEprdValues(),self.implantData.eprd=eprdValuesService.getEprdDefaults()):void 0}),this.checkPermission=function(permission){return authUserService.checkPermission(permission)},this.setControllDate=function(){return this.implantData.controllDate=implantsService.getControllDate()},this.updateEprd=function(){return implantsService.updateEprd(self.implantData,self.eprdPatient,function(implantData,showEprdOptions){return self.implantData=implantData,self.showEprdOptions=showEprdOptions})},this.checkEprdShow=function(){return implantsService.checkEprdShow(self.implantData,self.eprdPatient,function(implantData,showEprdOptions){return self.implantData=implantData,self.showEprdOptions=showEprdOptions})},$scope.save=function(nextStep){$scope.$broadcast("show-errors-check-validity"),$scope.implantDataForm.$valid?(self.buttonDisabled=!0,implantsService.createImplant(self.implantData,nextStep).then(function(buttonDisabled){return self.buttonDisabled=buttonDisabled})):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("manageUsers").constant("statesManageUsers",[{name:"root.manageUsers",options:{url:"/manage-users",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee"]},views:{"container@":{templateUrl:"main/manage/manage-users/manage-users.html",controller:"ManageUsersCtrl",controllerAs:"manageUsersController"},"update-user-lightbox@root.manageUsers":{templateUrl:"main/manage/manage-users/update-user/update-user-lightbox.html",controller:"UpdateUserCtrl",controllerAs:"updateUserController"}}}},{name:"root.userDetail",options:{url:"/manage-users/:userId",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee","employee-auto"]},views:{"container@":{templateUrl:"main/manage/manage-users/detail-user/detail-user.html",controller:"DetailUserCtrl",controllerAs:"detailUserController"},"update-user-lightbox@root.userDetail":{templateUrl:"main/manage/manage-users/update-user/update-user-lightbox.html",controller:"UpdateUserCtrl",controllerAs:"updateUserController"}},resolve:{User:function($stateParams,usersService,$state){return usersService.getUsers({_id:$stateParams.userId}).then(function(user){return 1===user.length?(usersService.setSelectedUser(user[0]),user[0]):(BootstrapDialog.alert({title:"Benutzer nicht vorhanden",message:"Bitte überprüfen Sie die Url oder ob der Benutzer gelöscht wurde.",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.manageUsers"))})}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("managePatients").constant("statesManagePatients",[{name:"root.managePatients",options:{url:"/manage-patients",data:{allowedRoles:["superAdmin","institute","employee"]},views:{"container@":{templateUrl:"main/manage/manage-patients/manage-patients.html",controller:"ManagePatientsCtrl",controllerAs:"managePatientsController"},"update-patient-lightbox@root.managePatients":{templateUrl:"main/manage/manage-patients/update-patient/update-patient-lightbox.html",controller:"UpdatePatientCtrl",controllerAs:"updatePatientController"},"search-patients@root.managePatients":{templateUrl:"main/manage/manage-patients/search-patients/search-patients.html",controller:"SearchPatientsCtrl",controllerAs:"searchPatientsController"}}}},{name:"root.patientDetail",options:{url:"/manage-patients/:patientId",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee"]},views:{"container@":{templateUrl:"main/manage/manage-patients/detail-patient/detail-patient.html",controller:"DetailPatientCtrl",controllerAs:"detailPatientController"},"update-patient-lightbox@root.patientDetail":{templateUrl:"main/manage/manage-patients/update-patient/update-patient-lightbox.html",controller:"UpdatePatientCtrl",controllerAs:"updatePatientController"}},resolve:{Patient:function($stateParams,patientsService,$state){return patientsService.getPatientsFromDb({_id:$stateParams.patientId}).then(function(patient){return 1===patient.length?patient[0]:(BootstrapDialog.alert({title:"Patient nicht vorhanden",message:"Bitte überprüfen Sie die Url oder ob der Patient gelöscht wurde.",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.managePatients"))})}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("manageLogs").constant("statesManageLogs",[{name:"root.manageLogs",options:{url:"/manage-logs",data:{allowedRoles:["superAdmin"]},views:{"container@":{templateUrl:"main/manage/manage-logs/manage-logs.html",controller:"ManageLogsCtrl",controllerAs:"manageLogsController"},"search-logs@root.manageLogs":{templateUrl:"main/manage/manage-logs/search-logs/search-logs.html",controller:"SearchLogsCtrl",controllerAs:"searchLogsController"}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("manageInstitutes").constant("statesManageInstitutes",[{name:"root.manageInstitutes",options:{url:"/manage-institutes",data:{allowedRoles:["superAdmin","national","nationalField","institute"]},views:{"container@":{templateUrl:"main/manage/manage-institutes/manage-institutes.html",controller:"ManageInstitutesCtrl",controllerAs:"manageInstitutesController"},"update-institute-lightbox@root.manageInstitutes":{templateUrl:"main/manage/manage-institutes/update-institute/update-institute-lightbox.html",controller:"UpdateInstituteCtrl",controllerAs:"updateInstituteController"}}}},{name:"root.instituteDetail",options:{url:"/manage-institutes/:instituteId",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee","employee-auto"]},views:{"container@":{templateUrl:"main/manage/manage-institutes/detail-institute/detail-institute.html",controller:"DetailInstituteCtrl",controllerAs:"detailInstituteController"},"update-institute-lightbox@root.instituteDetail":{templateUrl:"main/manage/manage-institutes/update-institute/update-institute-lightbox.html",controller:"UpdateInstituteCtrl",controllerAs:"updateInstituteController"}},resolve:{Institute:function($stateParams,institutesService,$state){return institutesService.getInstitutes({_id:$stateParams.instituteId}).then(function(institute){return 1===institute.length?(institutesService.setSelectedInstitute(institute[0]),institute[0]):(BootstrapDialog.alert({title:"Benutzer nicht vorhanden",message:"Bitte überprüfen Sie die Url oder ob die Klinik gelöscht wurde.",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.manageInstitutes"))})}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("manageImplants").constant("statesManageImplants",[{name:"root.manageImplants",options:{url:"/manage-implants",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee","patient"]},views:{"container@":{templateUrl:"main/manage/manage-implants/manage-implants.html",controller:"ManageImplantsCtrl",controllerAs:"manageImplantsController"},"update-implant-lightbox@root.manageImplants":{templateUrl:"main/manage/manage-implants/update-implant/update-implant-lightbox.html",controller:"UpdateImplantCtrl",controllerAs:"updateImplantController"},"search-implants@root.manageImplants":{templateUrl:"main/manage/manage-implants/search-implants/search-implants.html",controller:"SearchImplantsCtrl",controllerAs:"searchImplantsController"},"eprd@root.manageImplants":{templateUrl:"main/manage/manage-implants/update-implant/eprd.html"}}}},{name:"root.implantDetail",options:{url:"/manage-implants/:implantId",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee"]},views:{"container@":{templateUrl:"main/manage/manage-implants/detail-implant/detail-implant.html",controller:"DetailImplantCtrl",controllerAs:"detailImplantController"},"update-implant-lightbox@root.implantDetail":{templateUrl:"main/manage/manage-implants/update-implant/update-implant-lightbox.html",controller:"UpdateImplantCtrl",controllerAs:"updateImplantController"},"eprd@root.implantDetail":{templateUrl:"main/manage/manage-implants/update-implant/eprd.html"}},resolve:{Implant:function($stateParams,implantsService,$state){return implantsService.getImplantsFromDb({_id:$stateParams.implantId}).then(function(implant){return 1===implant.length?implant[0]:(BootstrapDialog.alert({title:"Implantat nicht vorhanden",message:"Bitte überprüfen Sie die Url oder ob das Implantat gelöscht wurde.",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.manageImplants"))})}}}},{name:"root.implantDownloads",options:{url:"/downloads-implant/:implantId",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee","employee-auto"]},views:{"container@":{templateUrl:"main/manage/manage-implants/downloads-implant/downloads-implant.html",controller:"DownloadsImplantCtrl",controllerAs:"downloadsImplantController"}},resolve:{Implant:function($stateParams,implantsService,$state){return implantsService.getImplantsFromDb({_id:$stateParams.implantId}).then(function(implant){return 1===implant.length?implant[0]:(BootstrapDialog.alert({title:"Implantat nicht vorhanden",message:"Bitte überprüfen Sie die Url oder ob das Implantat gelöscht wurde.",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.menu"))})}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("register",["registerInstitutes","registerUsers","registerPatients","registerImplants","myImplantsService","myPatientsService"]).constant("statesRegister",[{name:"root.registerUser",options:{url:"/register-user",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee"]},params:{instituteId:null},resolve:{Institute:function($stateParams){return $stateParams.intituteId}},views:{"container@":{templateUrl:"main/register/register-user/register-user.html",controller:"RegisterUserCtrl",controllerAs:"registerUserController"}}}},{name:"root.registerInstitute",options:{url:"/register-institute",data:{allowedRoles:["superAdmin"]},views:{"container@":{templateUrl:"main/register/register-institute/register-institute.html",controller:"RegisterInstituteCtrl",controllerAs:"registerInstituteController"}}}},{name:"root.registerPatient",options:{url:"/register-patient?previousRoute",data:{allowedRoles:["superAdmin","institute","employee"]},views:{"container@":{templateUrl:"main/register/register-patient/register-patient.html",controller:"RegisterPatientCtrl",controllerAs:"registerPatientController"}}}},{name:"root.registerImplant",options:{url:"/register-implant?previousRoute",data:{allowedRoles:["superAdmin","institute","employee","patient"]},views:{"container@":{templateUrl:"main/register/register-implant/register-implant.html",controller:"RegisterImplantCtrl",controllerAs:"registerImplantController"},"eprd@root.registerImplant":{templateUrl:"main/register/register-implant/eprd.html"}},resolve:{ImplantsFromPreviousOperations:function(){return null},ImplantData:function(){return null},Patient:function(){return null}}}},{name:"root.registerImplant.new",options:{url:"/register-implant/:patientId/:operationId",views:{"container@":{templateUrl:"main/register/register-implant/register-implant.html",controller:"RegisterImplantCtrl",controllerAs:"registerImplantController"}},resolve:{ImplantsFromPreviousOperations:function($stateParams,implantsService){return null!=$stateParams.operationId?implantsService.getImplantsFromPreviousOperations($stateParams.operationId).then(function(result){return result}):null},ImplantData:function(){return null},Patient:function($stateParams,patientsService){return null!=$stateParams.patientId?patientsService.getPatientsFromDb({_id:$stateParams.patientId}).then(function(patients){return null!=patients&&1===patients.length?patients[0]:$state.go("root.menu")}):(BootstrapDialog.alert({title:"PatientenId fehlt",message:"Keine PatientnId übergeben",type:BootstrapDialog.TYPE_DANGER}),void $state.go("root.menu"))}}}},{name:"root.registerImplant.new.identical",options:{url:"/register-implant/:operationId/:patientId/:identical",views:{"container@":{templateUrl:"main/register/register-implant/register-implant.html",controller:"RegisterImplantCtrl",controllerAs:"registerImplantController"}},resolve:{ImplantData:function($stateParams,ImplantsFromPreviousOperations){var implant;return $stateParams.identical&&null!==ImplantsFromPreviousOperations&&ImplantsFromPreviousOperations.length>0?(implant=ImplantsFromPreviousOperations[0],null!=implant.saveDate&&(implant.saveDate=new Date(implant.saveDate)),null!=implant.controllDate&&(implant.controllDate=new Date(implant.controllDate)),implant):null}}}},{name:"root.registerImplantWithId",options:{url:"/register-implant-with-id/:patientId",views:{"container@":{templateUrl:"main/register/register-implant/register-implant.html",controller:"RegisterImplantCtrl",controllerAs:"registerImplantController"}},resolve:{Patient:function($stateParams,$state,patientsService){return null!=$stateParams.patientId?patientsService.getPatientsFromDb({_id:$stateParams.patientId}).then(function(patients){return null!=patients&&1===patients.length?patients[0]:(BootstrapDialog.alert({title:"PatientenId ungültig",message:"Kein Patient mit dieser Id im System",type:BootstrapDialog.TYPE_DANGER}),$state.go("root.menu"))}):(BootstrapDialog.alert({title:"PatientenId fehlt",message:"Keine PatientnId übergeben",type:BootstrapDialog.TYPE_DANGER}),void $state.go("root.menu"))},ImplantsFromPreviousOperations:function(){return null},ImplantData:function(){return null}}}}]).config(["$stateProvider",function($stateProvider){}])}.call(this),function(){angular.module("manage",["manageInstitutes","manageUsers","managePatients","manageImplants","manageLogs"])}.call(this),function(){angular.module("tsd.fatSearch",[]).filter("fatSearch",function(){return function(input,searchText){var position;return null!=searchText&&searchText.length>0&&input.length>0&&(position=input.toLowerCase().indexOf(searchText.toLowerCase()),-1!==position&&(input=input.slice(0,position)+"<strong>"+input.slice(position,position+searchText.length)+"</strong>"+input.slice(position+searchText.length,input.length))),input}})}.call(this),function(){angular.module("tsd.errorFilter",[]).filter("errorFilter",function(){return function(error){var key,newError,value;if("string"==typeof error)return error;if("object"==typeof error){if(console.log("error"),console.log(JSON.stringify(error)),null!=error.errors){error=error.errors,newError="";for(key in error)value=error[key],newError+=value;return newError}return"Unbekannter Fehler"}}})}.call(this),function(){angular.module("tsd.userSelector",["ui.bootstrap.showErrors","tsd.fatSearch"]).directive("userSelector",["$http",function($http){return{restrict:"E",replace:!0,scope:{form:"=",model:"="},templateUrl:"directives/user-selector-directive/user-selector-directive.html",link:function(scope,elem,attrs){scope.selectedIndex=-1,scope.users=[],scope.selectedUser=null,scope.searchText="",scope.start=function(){return $http.get("/getUsersAutocomplete/.*").success(function(data){return scope.users=data.users.splice(0,1),scope.selectedUser=scope.users[0].lastName,scope.model=scope.users[0]._id,scope.users=[]})},scope.search=function(){return scope.searchText.length>0?$http.get("/getUsersAutocomplete/"+scope.searchText).success(function(data){return scope.users=data.users,scope.selectedIndex=-1}):void 0},scope.selectIndex=function(index){return scope.selectedIndex=index},scope.checkKeyDown=function(event){if(40===event.keyCode){if(event.preventDefault(),scope.selectedIndex+1<scope.users.length)return scope.selectedIndex++,console.log(scope.selectedIndex)}else if(38===event.keyCode){if(event.preventDefault(),scope.selectedIndex>0)return scope.selectedIndex--,console.log(scope.selectedIndex)}else{if(13===event.keyCode)return event.preventDefault(),scope.takeSelection(scope.selectedIndex);if(27===event.keyCode)return scope.users=[]}},scope.takeSelection=function(index){return scope.searchText=scope.users[index].lastName,scope.selectedUser=scope.users[index].lastName,scope.model=scope.users[index]._id,scope.users=[]},"true"===attrs.startLast&&scope.start()}}}])}.call(this),function(){angular.module("tsd.preventFormSubmit",[]).directive("preventFormSubmit",function(){return{restrict:"AE",link:function(scope,elem,attrs){return scope.checkKeyDown=function(event){13===event.keyCode&&event.preventDefault()}}}})}.call(this),function(){angular.module("tsd.patientSelector",["ui.bootstrap.showErrors","tsd.fatSearch","myImplantsService"]).directive("patientSelector",["$http","$rootScope","$filter","implantsService",function($http,$rootScope,$filter,implantsService){return{restrict:"E",replace:!0,scope:{form:"=",model:"=",startLast:"=",eprdPatient:"=?",highlight:"=?"},templateUrl:"directives/patient-selector-directive/patient-selector-directive.html",link:function(scope,elem,attrs){$rootScope.$on("newPatientCreated",function(event,data){return BootstrapDialog.confirm("Neuer Patient: "+data.patient.gender+" "+(null!=data.patient.firstName?data.patient.firstName:void 0)+" "+data.patient.lastName+" als Eingabe übernehmen?",function(result){return result?scope.start():void 0})}),scope.selectedIndex=-1,scope.patients=[],scope.selectedPatient=null,scope.searchText="",scope.start=function(){return $http.get("/getPatientsAutocomplete/.*").success(function(data){var birthdate;return null!=data.patients&&data.patients.length>0?(scope.patients=data.patients.splice(0,1),birthdate=$filter("date")(scope.patients[0].birthdate,"dd.MM.yyyy"),scope.selectedPatient=scope.patients[0].lastName+", "+scope.patients[0].firstName+" ("+birthdate+"), ID: "+scope.patients[0].patientId,scope.activateEprd(scope.patients[0]),scope.model=scope.patients[0]._id,scope.patients=[]):void 0})},scope.search=function(){return scope.searchText.length>0?$http.get("/getPatientsAutocomplete/"+scope.searchText).success(function(data){return scope.patients=data.patients,scope.selectedIndex=-1}):void 0},scope.selectIndex=function(index){return scope.selectedIndex=index},scope.checkKeyDown=function(event){if(40===event.keyCode){if(event.preventDefault(),scope.selectedIndex+1<scope.patients.length)return scope.selectedIndex++}else if(38===event.keyCode){if(event.preventDefault(),scope.selectedIndex>0)return scope.selectedIndex--}else{if(13===event.keyCode)return event.preventDefault(),scope.takeSelection(scope.selectedIndex);if(27===event.keyCode)return scope.patients=[]}},scope.takeSelection=function(index){var birthdate;return scope.searchText=scope.patients[index].lastName,birthdate=$filter("date")(scope.patients[index].birthdate,"dd.MM.yyyy"),scope.selectedPatient=scope.patients[index].lastName+", "+scope.patients[index].firstName+" ("+birthdate+"), ID: "+scope.patients[index].patientId,scope.activateEprd(scope.patients[index]),scope.model=scope.patients[index]._id,scope.patients=[]},scope.startLast===!0&&scope.start(),$rootScope.$on("selectedImplant",function(){var birthdate,patient;return patient=implantsService.getSelectedImplant().patient,birthdate=$filter("date")(patient.birthdate,"dd.MM.yyyy"),scope.selectedPatient=patient.lastName+", "+patient.firstName+" ("+birthdate+"), ID: "+patient.patientId,scope.activateEprd(patient)}),scope.activateEprd=function(patient){return patient.sendToEprd===!0?(scope.eprdPatient=!0,!0):patient.sendToEprd!==!1&&patient.institute&&patient.institute.sendToEprd===!0?(scope.eprdPatient=!0,!0):(scope.eprdPatient=!1,!1)}}}}])}.call(this),function(){angular.module("tsd.horizontalFix",[]).directive("horizontalFix",["$window",function($window){return{restrict:"A",link:function(scope,element,attrs){var changePosition,offset;offset=parseInt(attrs.right),changePosition=function(){var bootstrapMargin,value,windowWidth;return windowWidth=$window.innerWidth,bootstrapMargin=0,windowWidth>=1200?bootstrapMargin=($window.innerWidth-1140)/2:768>windowWidth?bootstrapMargin=0:992>windowWidth?bootstrapMargin=($window.innerWidth-720)/2:1200>windowWidth&&(bootstrapMargin=($window.innerWidth-940)/2,console.log(windowWidth)),value=(offset+bootstrapMargin).toString()+"px",element.css({right:value})},changePosition(),$(window).resize(function(){return changePosition()})}}}])}.call(this),function(){angular.module("tsd.excelExport",["ngCsv","myImplantsService"]).directive("excelExport",["implantsService",function(implantsService){return{restrict:"E",replace:!0,templateUrl:"directives/excel-export/excel-export.html",scope:{exportData:"="},link:function(scope,element,attrs){var self;self=this,this.prepareData=function(implants){var i,implant,j,k,len,newImplant,newImplants;for(newImplants=[],newImplant=[],newImplant[0]="Bezeichnung",newImplant[1]="Hersteller",newImplant[2]="Modell",newImplant[3]="Typ",newImplant[4]="Seriennummer",newImplant[5]="Losnummer",newImplant[6]="Im/Explantat",newImplant[7]="Patient",newImplant[8]="Versichertennummer",newImplant[9]="Email",newImplant[10]="Telefon",newImplant[11]="Anschrift",newImplants.push(newImplant),j=0,len=implants.length;len>j;j++){if(implant=implants[j],newImplant=[],newImplant[0]=null!=implant.art?implant.art:"",newImplant[1]=null!=implant.manufacturer?implant.manufacturer:"",newImplant[2]=implant.type?implant.type:"",newImplant[3]=null!=implant.serialNr?implant.serialNr:"",newImplant[4]=implant.lot?implant.lot:"",newImplant[5]=null!=implant.referenceNr?implant.referenceNr:"",newImplant[6]=implant.imOrExplant?implant.imOrExplant:"",null!=implant.patient)newImplant[7]=implant.patient.gender&&implant.patient.lastName?implant.patient.gender+" "+implant.patient.firstName+" "+implant.patient.lastName:"",newImplant[8]=implant.patient.insurant?implant.patient.insurant:"",newImplant[9]=implant.patient.email?implant.patient.email:"",newImplant[10]=implant.patient.telephone?implant.patient.telephone:"",newImplant[11]=implant.patient.street&&implant.patient.zipcode&&implant.patient.city?implant.patient.street+" "+implant.patient.zipcode+" "+implant.patient.city:"";else for(i=k=7;10>k;i=++k)newImplant[i]="";newImplants.push(newImplant)}return newImplants},scope.downloadExcel=function(){return implantsService.getAllImplantsFromDb().then(function(implants){return self.prepareData(implants)})}}}}])}.call(this),function(){angular.module("enterToTab",[]).directive("enterToTab",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){var fields,index;13===event.which&&(event.preventDefault(),fields=$(this).parents("form:eq(0),body").find("input, textarea, select"),index=fields.index(this),index>-1&&index+1<fields.length&&fields.eq(index+1).focus())})}})}.call(this),function(){angular.module("tsd.checkbox",[]).directive("checkbox",function(){return{restrict:"EA",replace:!0,require:"ngModel",scope:{inline:"@",notDefined:"@?",titleYes:"@?",titleDefault:"@?",titleNo:"@?"},templateUrl:"directives/checkbox/checkbox.html",link:function(scope,element,attrs,ngModel){"true"===scope.notDefined&&null==scope.titleYes&&(scope.titleYes="Überschreiben Sie die globale Einstellung"),"true"!==scope.notDefined&&null==scope.titleYes&&(scope.titleYes="Setzen der globale Einstellung auf Ja"),"true"===scope.notDefined&&null==scope.titleDefault&&(scope.titleDefault="Bei dieser Einstellung wird die globale Einstellung verwendetet"),"true"===scope.notDefined&&null==scope.titleNo&&(scope.titleNo="Überschreiben Sie die globale Einstellung"),"true"!==scope.notDefined&&null==scope.titleNo&&(scope.titleNo="Setzen der globale Einstellung auf Nein"),scope.make=function(value){return ngModel.$setViewValue(value),scope.ngModel=value},ngModel.$viewChangeListeners.push(function(){return scope.$eval(attrs.ngChange)})}}})}.call(this),function(){angular.module("tsd.autocompleteImplant",["ui.bootstrap.showErrors","tsd.fatSearch","myImplantsService"]).directive("autocompleteImplant",["$http","$rootScope","implantsService",function($http,$rootScope,implantsService){return{restrict:"E",replace:!0,scope:{form:"=",model:"=",size:"@",itemname:"@",label:"@",errorMsg:"@"},templateUrl:"directives/autocomplete-implant/autocomplete-implant.html",controller:"AutocompleteImplantCtrl"}}])}.call(this),function(){angular.module("tsd.autocompleteImplant").controller("AutocompleteImplantCtrl",["$scope","$rootScope","$http",function($scope,$rootScope,$http){$scope.label=$scope.label,$scope.name=$scope.itemname,$scope.selectedIndex=-1,$scope.elements=[],$scope.selectedImplant=null,$scope.search=function(){return null!=$scope.model&&$scope.model.length>0?$http.get("/get"+$scope.itemname.charAt(0).toUpperCase()+$scope.itemname.slice(1)+"sAutocomplete/"+$scope.model).success(function(data){return $scope.elements=data[$scope.itemname+"s"],$scope.selectedIndex=-1}):void 0},$scope.selectIndex=function(index){return $scope.selectedIndex=index},$scope.checkKeyDown=function(event){if(console.log($scope.form,"f"),40===event.keyCode){if(event.preventDefault(),$scope.selectedIndex+1<$scope.elements.length)return $scope.selectedIndex++;if(0===$scope.elements.length)return $scope.model=".*",$scope.search()}else if(38===event.keyCode){if(event.preventDefault(),$scope.selectedIndex>0)return $scope.selectedIndex--}else{if(13===event.keyCode)return event.preventDefault(),$scope.takeSelection($scope.selectedIndex);if(27===event.keyCode)return $scope.elements=[]}},$scope.takeSelection=function(index){return $scope.model=$scope.elements[index],$scope.elements=[]}}])}.call(this),function(){angular.module("websockets",["btford.socket-io"]).factory("chatSocket",["socketFactory","$location",function(socketFactory,$location){var host,http,mySocket,slashes;return http=$location.protocol(),slashes=http.concat("://"),host=slashes.concat($location.host()),host=host.concat(":"+$location.port()),mySocket=socketFactory({ioSocket:io(host)}),mySocket.forward("log"),mySocket.forward("message"),mySocket.forward("broadcast"),mySocket}])}.call(this),function(){angular.module("signup",["ngPasswordStrength"]).controller("SignupCtrl",["$scope","$http","$state","InvitationCode",function($scope,$http,$state,InvitationCode){var self;self=this,this.signup={},this.signup.invitationCode=InvitationCode,this.signup.password="Miau",this.checkSignupCode=function(){return/(^[0-9A-F]{24}$)/i.test(this.signup.invitationCode)?!0:this.signup.invitationCode=null},$scope.save=function(){$scope.$broadcast("show-errors-check-validity"),$scope.signupForm.$valid?$http({url:"/signup",method:"POST",data:{invitationCode:self.signup.invitationCode,password:self.signup.password}}).then(function(response){return BootstrapDialog.alert("Passwort erfolgreich geändert"),$state.go("root.menu")},function(response){return BootstrapDialog.alert({title:"Fehler",message:response.data.err,type:BootstrapDialog.TYPE_DANGER})}):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("myMenuService",["ngCookies","myAuthUserService"]).service("menuService",["$http","$rootScope","$cookies","authUserService",function($http,$rootScope,$cookies,authUserService){var self;self=this,this.updateData=function(){return $http.get("/ordermed/updateInstitutes").then(function(response){null!=response.data.err?BootstrapDialog.alert({title:"Fehler",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}):response.data.success&&BootstrapDialog.alert({title:"Erfolgreich geupdated",message:"Daten wurden erfolgreich aktualisiert",type:BootstrapDialog.TYPE_SUCCESS})})},this.eprdTest=function(){return $http.get("/eprd/test").then(function(response){null!=response.data.err?BootstrapDialog.alert({title:"Fehler",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}):response.data.success&&BootstrapDialog.alert({title:"Erfolgreich geupdated",message:"Daten wurden erfolgreich aktualisiert",type:BootstrapDialog.TYPE_SUCCESS})})},this.vitabookTest=function(testMethod){return $http.get("/vitabook/test/"+testMethod).then(function(response){BootstrapDialog.alert(null!=response.data.err?{title:"Fehler",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}:{title:"Test erfolgreich",message:response.data,type:BootstrapDialog.TYPE_SUCCESS})})},this.getInitialFromNationalRegister=function(initialKey,buttonDisabled){return console.log("initialKey "+initialKey),buttonDisabled=!0,$http.get("/getInitialFromNationalRegister/"+initialKey).then(function(response){buttonDisabled=!1,null!=response.data.err?BootstrapDialog.alert({title:"Fehler",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}):response.data.success&&BootstrapDialog.alert({
title:"Erfolgreich geupdated",message:"Initiale Klinik & User wurden erfolgreich eingerichtet",type:BootstrapDialog.TYPE_SUCCESS})})},this.toggleDummyCookie=function(){return authUserService.toggleDummyCookie()}}])}.call(this),function(){angular.module("menu",["myMenuService"]).controller("MenuCtrl",["$scope","authUserService","menuService",function($scope,authUserService,menuService){var self;self=this,this.initialData={},this.initialData.initialKey=null,self.buttonDisabled=!1,this.vitabookTestMethods=["ordermedWSgetInstitutesAndUsers","ordermedWSSaveUsers","ordermedWSSavePatients","ordermedWSSaveImplants"],this.vitabookTestData={test:"ordermedWSSaveImplants"},this.checkPermission=function(permission){return authUserService.checkPermission(permission)},this.updateData=function(){return menuService.updateData()},this.eprdTest=function(){return menuService.eprdTest()},this.vitabookTest=function(){return menuService.vitabookTest(this.vitabookTestData.test)},this.getInitialFromNationalRegister=function(){menuService.getInitialFromNationalRegister(self.initialData.initialKey,self.buttonDisabled)},this.toggleDummyCookie=function(){menuService.toggleDummyCookie()}}])}.call(this),function(){angular.module("myUsersService",[]).service("usersService",["$http","$state","$filter","$rootScope","$q",function($http,$state,$filter,$rootScope,$q){var self;self=this,this.selectedUser=null,this.getUsers=function(filter){return $http({url:"/getUsers",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Usersuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.users})},this.deleteUser=function(userId){var defer;return defer=$q.defer(),BootstrapDialog.confirm({title:"Wollen Sie diesen Benutzer wirklich löschen?",message:"Bitte wählen:",type:BootstrapDialog.TYPE_DANGER,callback:function(success){return success?$http({url:"/deleteUser/"+self.selectedUser._id,method:"DELETE"}).then(function(response){return defer.resolve(),null!=response.data.err&&""!==response.data.err?(BootstrapDialog.alert({title:"Fehler beim Löschen des Benutzers",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),!1):(BootstrapDialog.alert("User gelöscht"),self.selectedUser=null,"root.manageUsers"!==$state.current.name&&$state.go("root.manageUsers"),!0)}):(defer.resolve(),!1)}}),defer.promise},this.setSelectedUser=function(user){this.selectedUser=user,$rootScope.$broadcast("selectedUser")},this.getSelectedUserId=function(id){return null!=this.selectedUser?this.selectedUser._id:!1},this.getSelectedUser=function(id){return null!=this.selectedUser?this.selectedUser:!1}}])}.call(this),function(){angular.module("myPatientsService",[]).service("patientsService",["$http","$filter","$rootScope","$q",function($http,$filter,$rootScope,$q){var self;self=this,this.selectedPatient=null,this.patients=[],this.filter={},this.getFilter=function(){return this.filter},this.getPatients=function(){return this.patients},this.getPatientsFromDb=function(filter){var key;this.filter=filter;for(key in filter)this.filter.hasOwnProperty(key)&&""===this.filter[key]&&delete this.filter[key];return $http({url:"/getPatients",method:"POST",data:{filter:this.filter}}).then(function(response){var i,len,patient,ref,ref1;if(null!=response.data.err&&""!==response.data.err&&(console.log(response.data.err),BootstrapDialog.alert({title:"Fehler Patientsuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER})),self.patients=[],null!=(null!=(ref=response.data)?ref.patients:void 0))for(ref1=response.data.patients,i=0,len=ref1.length;len>i;i++)patient=ref1[i],null!=patient.birthdate&&(patient.birthdate=new Date(patient.birthdate)),null!=patient.savedate&&(patient.savedate=new Date(patient.savedate)),self.patients.push(patient);return self.patients})},this.deletePatient=function(patientId){var defer;return defer=$q.defer(),BootstrapDialog.confirm({title:"Wollen Sie diesen Patienten wirklich löschen?",message:"Bitte wählen:",type:BootstrapDialog.TYPE_DANGER,callback:function(success){return success?$http({url:"/deletePatient/"+self.selectedPatient._id,method:"DELETE"}).then(function(response){return defer.resolve(),null!=response.data.err&&""!==response.data.err?(BootstrapDialog.alert({title:"Fehler beim Löschen des Patienten",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),!1):(BootstrapDialog.alert("Patient gelöscht"),self.selectedPatient=null,"root.managePatients"!==$state.current.name&&$state.go("root.managePatients"),!0)}):(defer.resolve(),!1)}}),defer.promise},this.setSelectedPatient=function(patient){return this.selectedPatient=patient,$rootScope.$broadcast("selectedPatient")},this.getSelectedPatientId=function(){return null!=this.selectedPatient?this.selectedPatient._id:!1},this.getSelectedPatient=function(){return null!=this.selectedPatient?this.selectedPatient:!1}}])}.call(this),function(){angular.module("myLogsService",["tsd.errorFilter"]).service("logsService",["$http","$rootScope","$state","$filter",function($http,$rootScope,$state,$filter){var self;self=this,this.selectedLog=null,this.logs=[],this.countLogs=null,this.filter={},this.getFilter=function(){return this.filter},this.getLogs=function(){return this.logs},this.getAllLogsFromDb=function(){return $http({url:"/getAllLogs",method:"POST",data:{filter:this.filter}}).then(function(response){var i,len,log,ref;for(null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Logatsuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),self.logs=[],ref=response.data.logs,i=0,len=ref.length;len>i;i++)log=ref[i],null!=log.changeDate&&(log.changeDate=new Date(log.changeDate)),null!=log.lastSyncedManager&&(log.lastSyncedManager=new Date(log.lastSyncedManager)),self.logs.push(log);return self.logs})},this.getCountLogs=function(){return this.countLogs},this.countLogsDb=function(){return $http({url:"/countLogs",method:"POST",data:{filter:this.filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err?0:response.data.countLogs})},this.getLogsFromDb=function(filter,page){var key;this.filter=filter;for(key in filter)this.filter.hasOwnProperty(key)&&""===this.filter[key]&&delete this.filter[key];return null==page&&(page=0),$http({url:"/getLogs",method:"POST",data:{filter:filter,page:page}}).then(function(response){return null!=response.data.err&&""!==response.data.err?BootstrapDialog.alert({title:"Fehler Logatsuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):self.countLogsDb().then(function(countLogs){var i,len,log,ref;for(self.countLogs=countLogs,0===page&&(self.logs=[]),ref=response.data.logs,i=0,len=ref.length;len>i;i++)log=ref[i],null!=log.changeDate&&(log.changeDate=new Date(log.changeDate)),null!=log.lastSyncedManager&&(log.lastSyncedManager=new Date(log.lastSyncedManager)),self.logs.push(log);return self.logs})})},this.getLogsCustomersList=function(){return $http({url:"/getLogsCustomersList",method:"POST",data:{filter:{}}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Kunde",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.customers})},this.getLogsModelsList=function(logData){var filter;return filter={},$http({url:"/getLogsModelsList",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Modelle",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.models})},this.getLogsAttributesList=function(logData){var filter;return filter={},$http({url:"/getLogsAttributesList",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Typen",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.attributes})}}])}.call(this),function(){angular.module("myInstitutesService",[]).service("institutesService",["$http","$rootScope","$filter","$q",function($http,$rootScope,$filter,$q){var self;self=this,this.selectedInstitute=null,this.getInstitutes=function(filter){return $http({url:"/getInstitutes",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Institutesuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.institutes})},this.deleteInstitute=function(instituteId){var defer;return defer=$q.defer(),BootstrapDialog.confirm({title:"Wollen Sie diese Klinik wirklich löschen?",message:"Bitte wählen:",type:BootstrapDialog.TYPE_DANGER,callback:function(success){return success?$http({url:"/deleteInstitute/"+self.selectedInstitute._id,method:"DELETE"}).then(function(response){return defer.resolve(),null!=response.data.err&&""!==response.data.err?(BootstrapDialog.alert({title:"Fehler beim Löschen des Benutzers",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),!1):(BootstrapDialog.alert("Klinik gelöscht"),self.selectedInstitute=null,"root.manageInstitutes"!==$state.current.name&&$state.go("root.manageInstitutes"),!0)}):(defer.resolve(),!1)}}),defer.promise},this.setSelectedInstitute=function(institute){return this.selectedInstitute=institute,$rootScope.$broadcast("selectedInstitute")},this.getSelectedInstituteId=function(id){return null!=this.selectedInstitute?this.selectedInstitute._id:!1},this.getSelectedInstitute=function(id){return null!=this.selectedInstitute?this.selectedInstitute:!1}}])}.call(this),function(){angular.module("myImplantsService",["tsd.errorFilter"]).service("implantsService",["$http","$rootScope","$state","$filter","$window","$q","eprdValuesService",function($http,$rootScope,$state,$filter,$window,$q,eprdValuesService){var self;self=this,this.selectedImplant=null,this.implants=[],this.countImplants=null,this.filter={},this.bodyParts=null,this.createImplant=function(implantData,nextStep){return implantData.operationFinished="end"===nextStep,$http({url:"/createImplant",method:"POST",data:{implantData:implantData}}).then(function(response){var operationId;if(null==response.data.implantId||response.data.err)return BootstrapDialog.alert({title:"Fehler",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),!1;switch(BootstrapDialog.alert("Neues Implantat angelegt"),operationId=implantData.operationId||null,nextStep){case"end":$state.go("root.implantDownloads",{implantId:response.data.implantId});break;case"new":"root.registerImplant.new"===$state.current.name?$state.transitionTo($state.current,$stateParams,{reload:!0,inherit:!1,notify:!0}):$state.go("root.registerImplant.new",{operationId:operationId,patientId:implantData.patient});break;case"identical":"root.registerImplant.new.identical"===$state.current.name?$state.transitionTo($state.current,$stateParams,{reload:!0,inherit:!1,notify:!0}):$state.go("root.registerImplant.new.identical",{operationId:operationId,patientId:implantData.patient,identical:!0})}return!1})},this.getDummies=function(implantData,operationId){return implantData.art="Robo",implantData.manufacturer="Olymp",implantData.referenceNr="1223222",implantData.model="New Steel",implantData.type="22",implantData.lot="123323",implantData.serialNr=123223132,implantData.operationId=operationId||"12312A",implantData.operationName="HüftOp",implantData.controllDate=new Date("10.05.2019"),implantData.comment="Schnell, einfach, unkompliziert",implantData},this.getFilter=function(){return this.filter},this.getImplants=function(){return this.implants},this.getAllImplantsFromDb=function(){return $http({url:"/getAllImplants",method:"POST",data:{filter:this.filter}}).then(function(response){var i,implant,len,ref;for(null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Implantatsuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),self.implants=[],ref=response.data.implants,i=0,len=ref.length;len>i;i++)implant=ref[i],null!=implant.saveDate&&(implant.saveDate=new Date(implant.saveDate)),null!=implant.controllDate&&(implant.controllDate=new Date(implant.controllDate)),self.implants.push(implant);return self.implants})},this.getCountImplants=function(){return this.countImplants},this.countImplantsDb=function(){return $http({url:"/countImplants",method:"POST",data:{filter:this.filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err?0:response.data.countImplants})},this.getImplantsFromDb=function(filter,page){var key;this.filter=filter;for(key in filter)this.filter.hasOwnProperty(key)&&""===this.filter[key]&&delete this.filter[key];return null==page&&(page=0),$http({url:"/getImplants",method:"POST",data:{filter:filter,page:page}}).then(function(response){return null!=response.data.err&&""!==response.data.err?BootstrapDialog.alert({title:"Fehler Implantatsuche",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}):self.countImplantsDb().then(function(countImplants){var i,implant,len,ref;for(self.countImplants=countImplants,0===page&&(self.implants=[]),ref=response.data.implants,i=0,len=ref.length;len>i;i++)implant=ref[i],null!=implant.saveDate&&(implant.saveDate=new Date(implant.saveDate)),null!=implant.controllDate&&(implant.controllDate=new Date(implant.controllDate)),self.implants.push(implant);return self.implants})})},this.getControllDate=function(){var currentMonth,now;return now=new Date,currentMonth=now.getMonth(),now.setMonth(now.getMonth()+parseInt(this.datePreset)),now.getMonth()!==(currentMonth+this.datePreset)%12&&now.setDate(0),now},this.getSelectedImplantId=function(id){return null!=this.selectedImplant?this.selectedImplant._id:!1},this.getSelectedImplant=function(id){return null!=this.selectedImplant?this.selectedImplant:!1},this.getArtsList=function(){return $http({url:"/getArtsList",method:"POST",data:{filter:{}}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Bezeichnung",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.arts})},this.getManufacturersList=function(implantData){var filter;return filter={},null!=implantData.art&&(filter.art=implantData.art),$http({url:"/getManufacturersList",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Hersteller",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.manufacturers})},this.getModelsList=function(implantData){var filter;return filter={},null!=implantData.art&&(filter.art=implantData.art),filter.manufacturer=implantData.manufacturer,$http({url:"/getModelsList",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Modelle",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.models})},this.getTypesList=function(implantData){var filter;return filter={},null!=implantData.art&&(filter.art=implantData.art),filter.manufacturer=implantData.manufacturer,filter.model=implantData.model,$http({url:"/getTypesList",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Typen",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.types})},this.getSerialRangeMinMax=function(implantData){var filter;return filter={},null!=implantData.art&&(filter.art=implantData.art),filter.manufacturer=implantData.manufacturer,filter.model=implantData.model,filter.type=implantData.type,filter.lot=implantData.lot,$http({url:"/getSerialRangeMinMax",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Min Max Bereich der Seriennummern",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.range})},this.getLotRangeMinMax=function(implantData){var filter;return filter={},null!=implantData.art&&(filter.art=implantData.art),filter.manufacturer=implantData.manufacturer,filter.model=implantData.model,filter.type=implantData.type,filter.lot=implantData.lot,$http({url:"/getLotRangeMinMax",method:"POST",data:{filter:filter}}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Min Max Bereich der Seriennummern",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.range})},this.buildDateSelectOptions=function(){var currentMonth,currentYear,gte,i,index,lt,month,monthsList,now,options,year;for(options=[],now=new Date,currentYear=parseInt(now.getFullYear()),currentMonth=now.getMonth(),monthsList=["Januar","Februar","März","April","Mai","Juni","Juli","August","Septemper","Oktober","November","Dezember"],options.push({name:"Aktueller Monat",intervall:{$gte:new Date(currentYear,currentMonth)}}),options.push({name:"Aktuelles Jahr",intervall:{$gte:new Date(currentYear,0)}}),index=i=1;14>i;index=++i)year=currentYear,month=currentMonth-index,0>month&&(month+=12,year-=1),gte=new Date(year,month),lt=new Date(year,month+1),year.toString(),options.push({name:monthsList[month]+" "+year,intervall:{$gte:gte,$lt:lt}});return options.push({name:"Jahr: "+(currentYear-1).toString(),intervall:{$gte:new Date(currentYear-1,0),$lt:new Date(currentYear,0)}}),options.push({name:"Alle Einträge bis: "+(currentYear-1).toString(),intervall:{$lt:new Date(currentYear-1,0)}}),options},this.getImplantsFromPreviousOperations=function(operationId){return null!=operationId&&""!==operationId?$http({url:"/getImplantsFromPreviousOperations/"+operationId,method:"GET"}).then(function(response){return null!=response.data.err&&BootstrapDialog.alert({title:"Fehler Suche vorherige Operationen",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),response.data.implantsFromPreviousOperations}):null},this.getImplantCard=function(){var implantId,operationId;return implantId=null!=self.selectedImplant._id?self.selectedImplant._id:"none",operationId=null!=self.selectedImplant.operationId?self.selectedImplant.operationId:"none",$window.open("/getImplantPdf/"+implantId+"/"+operationId,"_blank"),null},this.getBodyParts=function(callback){return null===this.bodyParts?$http.get("./assets/json/body-parts.json").success(function(response){return null==response.bodyParts?callback("Keine Liste mit Körperregionen vorhanden"):(self.bodyParts=response.bodyParts,callback(null,self.bodyParts))}):callback(null,self.bodyParts)},this.getCoWorkers=function(){return $http({url:"/getCoWorkers",method:"GET"}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Mitarbeiter",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}),response.data.coWorkers})},this.getImplanter=function(){return $http({url:"/getImplanter",method:"GET"}).then(function(response){return null!=response.data.err&&""!==response.data.err&&BootstrapDialog.alert({title:"Fehler Suche Erfasser",message:response.data.err,type:BootstrapDialog.TYPE_DANGER}),{creator:response.data.creator,institute:response.data.institute}})},this.setSelectedImplant=function(implant){return this.selectedImplant=implant,$rootScope.$broadcast("selectedImplant")},this.checkEprdShow=function(implantData,eprdPatient,callback){var bodyPart,showEprdOptions;return bodyPart=implantData.bodyPart,"Hüfte"===bodyPart||"Knie"===bodyPart?implantData.sendToEprd===!0?showEprdOptions=!0:implantData.sendToEprd===!1?(implantData.eprd={},showEprdOptions=!1):eprdPatient===!0?showEprdOptions=!0:(implantData.eprd={},showEprdOptions=!1):showEprdOptions=!1,callback(implantData,showEprdOptions)},this.updateEprd=function(implantData,eprdPatient,callback){"Hüfte"===implantData.bodyPart?(implantData.eprd=eprdValuesService.getEprdDefaults(),implantData.eprd.gelenk=1):"Knie"===implantData.bodyPart?(implantData.eprd=eprdValuesService.getEprdDefaults(),implantData.eprd.gelenk=2):implantData.eprd={},self.checkEprdShow(implantData,eprdPatient,callback)},this.deleteImplant=function(implantId){var defer;return defer=$q.defer(),BootstrapDialog.confirm({title:"Wollen Sie dieses Implantat wirklich löschen?",message:"Bitte wählen:",type:BootstrapDialog.TYPE_DANGER,callback:function(success){return success?$http({url:"/deleteImplant/"+self.selectedImplant._id,method:"DELETE"}).then(function(response){return defer.resolve(),null!=response.data.err&&""!==response.data.err?(BootstrapDialog.alert({title:"Fehler beim Löschen des Implants",message:$filter("errorFilter")(response.data.err),type:BootstrapDialog.TYPE_DANGER}),!0):(BootstrapDialog.alert("Implantat gelöscht"),self.selectedImplant=null,"root.manageImplants"!==$state.current.name&&$state.go("root.manageImplants"),!1)}):(defer.resolve(),!1)}}),defer.promise}}])}.call(this),function(){angular.module("myEprdValuesService",[]).service("eprdValuesService",function(){var self;self=this,this.eprdValues={},this.eprdDefaults={},this.eprdValues.gelenk=[{code:"1",name:"Hüfte"},{code:"2",name:"Knie"}],this.eprdDefaults.gelenk="1",this.eprdValues.seite=[{code:"1",name:"Links"},{code:"2",name:"Rechts"}],this.eprdDefaults.seite="1",this.eprdValues.arteingriff=[{code:"1",name:"Erst-OP"},{code:"2",name:"Reoperation mit Ergänzung einer Komponente"},{code:"3",name:"Wechsel-OP"}],this.eprdDefaults.arteingriff="1",this.eprdValues.artikeltyp=[{code:"1",name:"Hüft-Komponente"},{code:"2",name:"Knie-Komponente"},{code:"3",name:"Modulare Komponente (Hüfte/Knie)"},{code:"4",name:"Knochen-Zement"},{code:"5",name:"Implatant-Zubehör"}],this.eprdDefaults.artikeltyp="1",this.eprdValues.hersteller=[{code:"99",name:"Sonstige"},{code:"1",name:"Smith & Nephew GmbH"},{code:"2",name:"DePuy Orthopädie GmbH"},{code:"3",name:"aap Implanate AG"},{code:"4",name:"Heraeus Medical GmbH"},{code:"5",name:"Zimmer Germany GmbH"},{code:"6",name:"Stryker GmbH & Co. KG"},{code:"7",name:"Aesculap AG"},{code:"8",name:"Waldemar Link GmbH & Co. KG"},{code:"9",name:"Corin Germany GmbH"},{code:"10",name:"Mathys Orthopädie GmbH"},{code:"11",name:"CeramTec AG"},{code:"12",name:"Biomet Deutschland GmbH"},{code:"14",name:"Peter Brehm GmbH"},{code:"16",name:"Amplitude GmbH"},{code:"17",name:"Exactech Deutschland"},{code:"18",name:"Globus Medical"},{code:"19",name:"Implantcast GmbH"},{code:"20",name:"IO-International Orthopaedics"},{code:"21",name:"Joint Replacement Ltd. Instrumentation"},{code:"22",name:"Merete"},{code:"23",name:"S&G Implants GmbH"},{code:"24",name:"Speetec Implantate GmbH"},{code:"25",name:"Stemcup Medical Products GmbH"},{code:"26",name:"Symbios Deutschland GmbH"},{code:"27",name:"Tantum AG"},{code:"28",name:"Tornier GmbH"},{code:"29",name:"Wright Medical Deutschland GmbH"},{code:"31",name:"AQImplants"},{code:"32",name:"Orthodynamics GmbH"},{code:"33",name:"Atesos medical AG"},{code:"35",name:"Medacta Ortho GmbH"},{code:"36",name:"OHST Medizintechnik AG"},{code:"37",name:"Lima Deutschland GmbH"},{code:"38",name:"alloPlus GmbH"},{code:"40",name:"ImplanTec Deutschland GmbH"}],this.eprdDefaults.hersteller="99",this.eprdValues.einheit=[{code:"1",name:"Stck."},{code:"2",name:"g"},{code:"3",name:"mg"},{code:"4",name:"l"},{code:"5",name:"ml"},{code:"6",name:"cm3"},{code:"7",name:"mm"},{code:"8",name:"cm"}],this.eprdDefaults.einheit="1",this.eprdValues.vorOpHuefte=[{code:"H99",name:"Andere"},{code:"H1",name:"keine relevante Voroperation"},{code:"H2a",name:"Osteosynthese/Osteotomie (Becken)"},{code:"H2b",name:"Osteosynthese/Osteotomie (Femur)"},{code:"H2c",name:"Osteosynthese/Osteotomie (beides)"},{code:"H3",name:"Operation bei Hüftkopfnekrose"},{code:"H4",name:"Arthrodese"}],this.eprdDefaults.vorOpHuefte="H99",this.eprdValues.vorOpKnie=[{code:"K99",name:"Andere"},{code:"K1",name:"keine relevante Voroperation"},{code:"K2a",name:"Osteosynthese/Osteotomie (Femur)"},{code:"K2b",name:"Osteosynthese/Osteotomie (Tibia)"},{code:"K2c",name:"Osteosynthese/Osteotomie (Patella)"},{code:"K2d",name:"Osteosynthese/Osteotomie (mehrere)"},{code:"K3",name:"Kapsel-/Bandapparat"},{code:"K4",name:"Arthrodese"}],this.eprdDefaults.vorOpKnie="K99",this.eprdValues.wechselgrundHuefte=[{code:"H99",name:"Andere Gründe"},{code:"H1",name:"Infektion"},{code:"H2a",name:"Lockerung (Pfanne)"},{code:"H2b",name:"Lockerung (Schaft)"},{code:"H2c",name:"Lockerung (beides)"},{code:"H3a",name:"Osteolyse bei festem Implantat (Pfanne)"},{code:"H3b",name:"Osteolyse bei festem Implantat (Schaft)"},{code:"H3c",name:"Osteolyse bei festem Implantat (beides)"},{code:"H4",name:"Periprothetische Fraktur"},{code:"H5",name:"Luxation"},{code:"H6",name:"Implantatverschleiß"},{code:"H7",name:"Versagen einer Implantatkomponente"},{code:"H8",name:"Implantatfehllage (auch Dislokation)"},{code:"H9",name:"Progression der Arthrose"},{code:"H10",name:"Zustand nach Prothesenentfernung"}],this.eprdDefaults.wechselgrundHuefte="H99",this.eprdValues.wechselgrundKnie=[{code:"K99",name:"Andere Gründe"},{code:"K1",name:"Infektion"},{code:"K2a",name:"Lockerung (Femur)"},{code:"K2b",name:"Lockerung (Tibia)"},{code:"K2c",name:"Lockerung (Patella)"},{code:"K2d",name:"Lockerung (mehrere)"},{code:"K3a",name:"Osteosynthese/Osteotomie (Femur)"},{code:"K3b",name:"Osteosynthese/Osteotomie (Tibia)"},{code:"K3c",name:"Osteosynthese/Osteotomie (Patella)"},{code:"K3d",name:"Osteosynthese/Osteotomie (mehrere)"},{code:"K4",name:"Periprothetische Fraktur"},{code:"K5",name:"Bandinstabilität"},{code:"K6",name:"Implantatverschleiß"},{code:"K7",name:"Versagen einer Implantatkomponente"},{code:"K8",name:"Fehllage/Rotationsfehler"},{code:"K9",name:"Progression der Arthrose"},{code:"K10",name:"Zustand nach Prothesenentfernung"}],this.eprdDefaults.wechselgrundKnie="K99",this.eprdValues.zweizeitwechsel=[{code:"0",name:"Nein"},{code:"2",name:"Ja – Ausbau"},{code:"3",name:"Ja - Einbau"}],this.eprdDefaults.zweizeitwechsel="0",this.getEprdValues=function(){return this.eprdValues},this.getEprdDefaults=function(){return this.eprdDefaults}})}.call(this),function(){angular.module("implantatregister",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","ui.bootstrap","ui.bootstrap.showErrors","myAuthUserService","header","menu","manage","register","error","signup"]).config(["$stateProvider","$urlRouterProvider","$uiViewScrollProvider","showErrorsConfigProvider","statesManageInstitutes","statesManageUsers","statesManagePatients","statesManageImplants","statesManageLogs","statesRegister",function($stateProvider,$urlRouterProvider,$uiViewScrollProvider,showErrorsConfigProvider,statesManageInstitutes,statesManageUsers,statesManagePatients,statesManageImplants,statesManageLogs,statesRegister){return showErrorsConfigProvider.showSuccess(!0),$stateProvider.state("root",{views:{"header@":{templateUrl:"header/header.html",controller:"HeaderCtrl",controllerAs:"headerController"},"header-lightbox@root":{templateUrl:"header/header-lightbox.html"},"navigation-superAdmin@root":{templateUrl:"header/navigation-superAdmin.html",controller:"NavigationCtrl",controllerAs:"navigationController"},"navigation-national@root":{templateUrl:"header/navigation-national.html",controller:"NavigationCtrl",controllerAs:"navigationController"},"navigation-nationalField@root":{templateUrl:"header/navigation-nationalField.html",controller:"NavigationCtrl",controllerAs:"navigationController"},"navigation-institute@root":{templateUrl:"header/navigation-institute.html",controller:"NavigationCtrl",controllerAs:"navigationController"},"navigation-employee@root":{templateUrl:"header/navigation-employee.html",controller:"NavigationCtrl"},"navigation-employee-auto@root":{templateUrl:"header/navigation-employee-auto.html",controller:"NavigationCtrl"},"navigation-patient@root":{templateUrl:"header/navigation-patient.html",controller:"NavigationCtrl",controllerAs:"navigationController"},"footer@":{templateUrl:"footer/footer.html"}},resolve:{user:["authUserService",function(authUserService){return authUserService.isLoggedIn()?!0:authUserService.getUserData("permissionLevel").then(function(permissionLevel){return"institute"===permissionLevel||"employee"===permissionLevel?authUserService.getUserFromBackend().then(function(){return!0}):!0})}]}}).state("root.menu",{url:"/menu",data:{allowedRoles:["superAdmin","national","nationalField","institute","employee","employee-auto","patient"]},views:{"container@":{templateUrl:"menu/menu.html",controller:"MenuCtrl",controllerAs:"menuController"}}}).state("root.error",{url:"/error",resolve:{errorObj:function(){return this.error}},views:{"container@":{templateUrl:"error/error.html",controller:"ErrorCtrl",controllerAs:"errorController"}}}).state("root.signup",{url:"/signup/:invitationCode",resolve:{InvitationCode:["$stateParams",function($stateParams){return $stateParams.invitationCode}]},views:{"container@":{templateUrl:"signup/signup.html",controller:"SignupCtrl",controllerAs:"signupController"}}}).state("root.login",{url:"/login",views:{"container@":{templateUrl:"login/login.html",controller:"LoginCtrl",controllerAs:"loginController"}}}),angular.forEach(statesRegister,function(state){return $stateProvider.state(state.name,state.options)}),angular.forEach(statesManageInstitutes,function(state){return $stateProvider.state(state.name,state.options)}),angular.forEach(statesManageUsers,function(state){return $stateProvider.state(state.name,state.options)}),angular.forEach(statesManagePatients,function(state){return $stateProvider.state(state.name,state.options)}),angular.forEach(statesManageImplants,function(state){return $stateProvider.state(state.name,state.options)}),angular.forEach(statesManageLogs,function(state){return $stateProvider.state(state.name,state.options)}),$urlRouterProvider.otherwise("/login"),$uiViewScrollProvider.useAnchorScroll()}]).run(["$rootScope","$state","authUserService",function($rootScope,$state,authUserService){$rootScope.permissionCheck=function(toState,$state,authUserService){var ref;return"root.login"===toState.name&&authUserService.isLoggedIn()?(event.preventDefault(),$state.go("root.menu")):"root.login"===toState.name||"root.signup"===toState.name?!0:("root.login"!==toState.name,0||authUserService.isLoggedIn()?null==(null!=(ref=toState.data)?ref.allowedRoles:void 0)||authUserService.checkPermission(toState.data.allowedRoles)?void 0:(event.preventDefault(),$state.go("root.login"),BootstrapDialog.alert({title:"Erforderliche Rechte fehlen",message:"Bitte mit Account, der die erforderlichen Rechte besitzt einloggen.",type:BootstrapDialog.TYPE_DANGER}),!1):(event.preventDefault(),console.log("not logged in sending from "+toState.name+" to login"),$state.go("root.login"),BootstrapDialog.alert({title:"Login erforderlich",message:"Sie sind nicht eingeloggt, bitte zuerst einloggen.",type:BootstrapDialog.TYPE_DANGER}),!1))},$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){return authUserService.isLoggedIn()?$rootScope.permissionCheck(toState,$state,authUserService):authUserService.getUserData("permissionLevel").then(function(permissionLevel){return"institute"===permissionLevel||"employee"===permissionLevel?authUserService.getUserFromBackend().then(function(){return $rootScope.permissionCheck(toState,$state,authUserService)}):$rootScope.permissionCheck(toState,$state,authUserService)})}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){
return event.preventDefault(),console.log($state.get("error"),error),null!=$state.get("error")&&($state.get("error").error={code:123,description:"Exception stack trace"}),$state.go("root.error")})}]).filter("booleanX",function(){return function(boolean){return boolean?"X":"-"}})}.call(this),function(){angular.module("implantatregister").controller("LoginCtrl",["$rootScope","$scope","$http","$state","authUserService",function($rootScope,$scope,$http,$state,authUserService){var self;self=this,this.login={},this.userDummies=function(){return authUserService.userDummies()},this.userDummies()&&(this.login.password="Miau",this.emailOptions=["superAdmin@autofokus-marketing.de","nationalA@autofokus-marketing.de","nationalField@autofokus-marketing.de","klinikA@autofokus-marketing.de","employeeA@autofokus-marketing.de","employee-auto@autofokus-marketing.de","patient@autofokus-marketing.de"],this.login.email=this.emailOptions[0]),$scope.save=function(){$scope.$broadcast("show-errors-check-validity"),$scope.loginForm.$valid?$http({url:"/login",method:"POST",data:{email:self.login.email,password:self.login.password}}).success(function(response){return null!=response.success?($rootScope.$broadcast("loggedIn"),authUserService.getUserFromBackend().then(function(permissionLevel){return $state.go("root.menu")})):void 0}).error(function(data,status,headers,config){return 401===status?BootstrapDialog.alert({title:"Fehler",message:"Passwort oder Email fehlerhaft",type:BootstrapDialog.TYPE_DANGER}):void 0}):BootstrapDialog.alert({title:"Fehlende Angaben",message:"Bitte die Pflichtfelder ausfüllen!",type:BootstrapDialog.TYPE_DANGER})}}])}.call(this),function(){angular.module("header",["websockets","myAuthUserService"]).controller("HeaderCtrl",["$scope","$rootScope","$state","$log","$http","$window","chatSocket","authUserService",function($scope,$rootScope,$state,$log,$http,$window,chatSocket,authUserService){var close,open,self,toggle;self=this,this.user={},this.headerLightbox={isOpen:!1},this.checkPermission=function(userType){return authUserService.checkPermission(userType)},this.isLoggedIn=function(){return authUserService.isLoggedIn()},this.logOut=function(){return authUserService.logOut()},this.sendTestMsg=function(){console.log("emitting msg",chatSocket),chatSocket.emit("message","nickName","example msg")},this.getUser=function(){return this.user=authUserService.getUserData("all"),null===this.user?authUserService.getUserFromBackend(function(err,permissionLevel){return self.user=authUserService.getUserData("all")}):void 0},this.userPopover={isOpen:!1,templateUrl:"myPopoverTemplate.html",open:open=function(){self.userPopover.isOpen=!0,self.headerLightbox.isOpen=!0},close:close=function(){self.userPopover.isOpen=!1,self.headerLightbox.isOpen=!1},toggle:toggle=function(){self.headerLightbox.isOpen=!self.headerLightbox.isOpen},stateChangeSuccess:$rootScope.$on("$stateChangeSuccess",function(){self.userPopover.close()})},$rootScope.$on("loggedIn",function(){return self.getUser()}),this.getUser(),$rootScope.$on("socket:message",function(event,data){return data.patient.institute===authUserService.getUserData("instituteId")&&(authUserService.checkPermission("institute")||authUserService.checkPermission("employee")&&data.patient.field===authUserService.getUserData("field"))?"root.registerImplant"!==$state.current.name?BootstrapDialog.alert("Neuer Patient "+data.patient.gender+" "+(null!=data.patient.firstName?data.patient.firstName:void 0)+" "+data.patient.lastName+" angelegt"):$rootScope.$broadcast("newPatientCreated",data):void 0}),$rootScope.$on("socket:log",function(event,data){return null==(null!=data?data.message:void 0)&&console.log("no message"),data.message?console.log(data.message,"BE"):void 0}),$rootScope.$on("loggedOut",function(event){return self.user={}}),this.userDummies=function(){return authUserService.userDummies()}}])}.call(this),function(){angular.module("header").controller("NavigationCtrl",["$scope","$state",function($scope,$state){this.isState=function(state){return $state.is(state)}}])}.call(this),function(){angular.module("error",[]).controller("ErrorCtrl",["$scope","errorObj",function($scope,errorObj){console.log("ERROR",errorObj),this.error=errorObj}])}.call(this),function(){angular.module("implantatregister").directive("myDownload",["$compile",function($compile){return{restrict:"E",scope:{getUrlData:"&getData"},link:function(scope,elm,attrs){var url;url=URL.createObjectURL(scope.getUrlData()),elm.append($compile('<a class="btn" download="backup.json"href="'+url+'">Download</a>')(scope))}}}])}.call(this),function(){angular.module("myAuthUserService",[]).service("authUserService",["$http","$rootScope","$state","$cookies",function($http,$rootScope,$state,$cookies){var self;self=this,this.user={},this.user.permissionLevel=null,this.user.instituteId=null,this.user.field=null,this.user.id=null,this.getUserFromBackend=function(){return $http({url:"/getAppUser",method:"GET"}).then(function(response){var user;return user=response.data,self.user.id=user._id,self.user.lastName=user.lastName,self.user.field=user.field,self.user.instituteId=user.instituteId,self.user.permissionLevel=user.permissionLevel,self.user.permissionLevel})},this.getUserData=function(field){switch(field){case"all":return self.user;case"userId":return self.user.id;case"instituteId":return self.user.instituteId;case"field":return self.user.field;case"lastName":return self.user.lastName;case"permissionLevel":return null!=this.user.permissionLevel&&null!==self.user.permissionLevel?self.user.permissionLevel:this.getUserFromBackend(function(permissionLevel){return self.user.permissionLevel=permissionLevel,self.user.permissionLevel});default:return console.log("no valid user data request")}},this.isLoggedIn=function(){return null!=this.user.permissionLevel&&null!==this.user.permissionLevel},this.logOut=function(){return $http({url:"/logout",method:"GET"}).then(function(response){return null!=response.data.success?(self.user={},self.user.permissionLevel=null,self.user.instituteId=null,self.user.field=null,self.user.id=null,$rootScope.$broadcast("loggedOut"),$state.go("root.login")):console.log("no logout",response)})},this.checkPermission=function(permissions){return"object"==typeof permissions?permissions.some(function(permission){return permission===self.user.permissionLevel}):"string"==typeof permissions?permissions===self.user.permissionLevel:!1},this.userDummies=function(){var dummies;return dummies=$cookies.get("dummies"),null!=dummies?JSON.parse(dummies):!1},this.toggleDummyCookie=function(){var dummies;dummies=$cookies.get("dummies"),dummies=null!=dummies?!JSON.parse(dummies):!0,BootstrapDialog.alert({title:"Dummy Cookie",message:dummies.toString(),type:dummies===!0?BootstrapDialog.TYPE_INFO:BootstrapDialog.TYPE_WARNING}),$cookies.put("dummies",dummies.toString())}}])}.call(this),angular.module("implantatregister").run(["$templateCache",function($templateCache){$templateCache.put("error/error.html","<h1>{{errorController.error}}</h1>"),$templateCache.put("header/header-lightbox.html",'<div ng-click="headerController.userPopover.close()" class="header-lightbox" ng-class="headerController.headerLightbox.isOpen ? \'header-lightbox-active\' : \'header-lightbox-inactive\'" id="header-lightbox">HEADER {{headerController.headerLightbox.isOpen}}</div>'),$templateCache.put("header/header-user-bar.html",'<div><div ng-if="headerController.user.lastName != null"><label>Eingeloggt als</label><p>{{headerController.user.lastName}}</p></div><div ng-if="headerController.user.id != null"><label>Userkennung Implantatmanager</label><p>{{headerController.user.id}}</p></div><div ng-if="headerController.user.instituteId != null"><label>Klinikkennung Implantatmanager</label><p>{{headerController.user.instituteId}}</p></div><a ui-sref="root.userDetail({userId: headerController.user.id})"><button class="btn btn-cta">Mein Account</button></a> <a ng-if="headerController.checkPermission([\'institute\'])" ui-sref="root.instituteDetail({instituteId: headerController.institute.id})"><button class="btn btn-cta">Klinikeinstellungen</button></a></div>'),$templateCache.put("header/header.html",'<nav class="navbar navbar-static-top navbar-inverse"><div class="container"><div class="row"><div class="navbar-header navbar-header-connect col-xs-12"><div class="navigation"><ul class="navbar-brand-wrapper"><li><a class="navbar-brand" ui-sref="root.menu"></a></li></ul><ul class="navigation-items"><ui-view ng-if="headerController.checkPermission(\'superAdmin\')" name="navigation-superAdmin"></ui-view><ui-view ng-if="headerController.checkPermission(\'national\')" name="navigation-national"></ui-view><ui-view ng-if="headerController.checkPermission(\'nationalField\')" name="navigation-nationalField"></ui-view><ui-view ng-if="headerController.checkPermission(\'institute\')" name="navigation-institute"></ui-view><ui-view ng-if="headerController.checkPermission(\'employee\')" name="navigation-employee"></ui-view><ui-view ng-if="headerController.checkPermission(\'employee-auto\')" name="navigation-employee-auto"></ui-view><ui-view ng-if="headerController.checkPermission(\'patient\')" name="navigation-patient"></ui-view></ul><ul class="user-bar"><li><a href="" ng-click="headerController.userPopover.toggle()" ng-class="{\'dummies\' : headerController.userDummies() == true}" popover-is-open="headerController.userPopover.isOpen" popover-placement="bottom" popover-template="\'header/header-user-bar.html\'" class="navbar-user">{{headerController.user.lastName}}</a></li><li ng-if="headerController.isLoggedIn()"><a ng-click="headerController.logOut()" href="">Abmelden</a></li></ul></div></div></div></div></nav><ui-view name="header-lightbox"></ui-view>'),$templateCache.put("header/navigation-employee-auto.html",""),$templateCache.put("header/navigation-employee.html","<li ng-class=\"navigationController.isState('root.registerImplant') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerImplant\">Implantat erfassen</a></li><li ng-class=\"navigationController.isState('root.manageImplants') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageImplants\">Implantat-Register</a></li><li ng-class=\"navigationController.isState('root.registerPatient') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerPatient\">Patient erfassen</a></li><li ng-class=\"navigationController.isState('root.managePatients') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.managePatients\">Patienten-Register</a></li>"),$templateCache.put("header/navigation-institute.html","<li ng-class=\"navigationController.isState('root.registerImplant') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerImplant\">Implantat erfassen</a></li><li ng-class=\"navigationController.isState('root.manageImplants') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageImplants\">Implantat-Register</a></li><li ng-class=\"navigationController.isState('root.registerPatient') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerPatient\">Patient erfassen</a></li><li ng-class=\"navigationController.isState('root.managePatients') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.managePatients\">Patienten-Register</a></li><li ng-class=\"navigationController.isState('root.registerUser') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerUser\">Mitarbeiter erfassen</a></li><li ng-class=\"navigationController.isState('root.manageUsers') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageUsers\">Mitarbeiter verwalten</a></li>"),$templateCache.put("header/navigation-national.html","<li ng-class=\"navigationController.isState('root.manageImplants') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageImplants\">Implantat-Register</a></li><li ng-class=\"navigationController.isState('root.registerUser') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerUser\">Mitarbeiter erfassen</a></li><li ng-class=\"navigationController.isState('root.manageUsers') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageUsers\">Mitarbeiter verwalten</a></li>"),$templateCache.put("header/navigation-nationalField.html","<li ng-class=\"navigationController.isState('root.manageImplants') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageImplants\">Implantat-Register</a></li><li ng-class=\"navigationController.isState('root.registerUser') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerUser\">Mitarbeiter erfassen</a></li><li ng-class=\"navigationController.isState('root.manageUsers') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageUsers\">Mitarbeiter verwalten</a></li>"),$templateCache.put("header/navigation-patient.html","<li ng-class=\"navigationController.isState('root.registerImplant') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerImplant\">Implantat erfassen</a></li><li ng-class=\"navigationController.isState('root.manageImplants') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageImplants\">Implantat-Register</a></li>"),$templateCache.put("header/navigation-superAdmin.html","<li ng-class=\"navigationController.isState('root.registerInstitute') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerInstitute\">Klinik erfassen</a></li><li ng-class=\"navigationController.isState('root.manageInstitutes') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageInstitutes\">Kliniken verwalten</a></li><li ng-class=\"navigationController.isState('root.registerUser') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.registerUser\">Mitarbeiter erfassen</a></li><li ng-class=\"navigationController.isState('root.manageUsers') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageUsers\">Mitarbeiter verwalten</a></li><li ng-class=\"navigationController.isState('root.manageLogs') ? 'navigation-active' : 'navigation-inactive'\"><a ui-sref=\"root.manageLogs\">Logs-Register</a></li>"),$templateCache.put("footer/footer.html",'<div id="footer"><div class="container"><div class="row"><div class="col-xs-12 col-sm-3"><span class="copyright">© 2015 Ordermed GmbH. All rights reserved.</span></div><div class="col-xs-12 col-sm-3"><ul><li class="footer-category"><a href="http://ordermed.de/index" title="ordermed">ordermed</a></li><li><a href="https://www.ordermed.de/impressum" title="Impressum">Impressum</a></li><li><a href="https://www.ordermed.de/datenschutz" title="Datenschutz">Datenschutz</a></li><li><a href="https://www.ordermed.de/nutzungsbedingungen" title="Nutzungsbedingungen">Nutzungsbedingungen</a></li><li><a href="mailto:info@ordermed.de" title="Kontakt">Kontakt</a></li></ul></div></div></div></div>'),$templateCache.put("login/login.html",'<div class="bg-ultralight-grey"><div class="container"><section class="container"><form name="loginForm" ng-submit="save()"><h1>Login</h1><div class="row"><div class="form-group col-lg-6" show-errors="" ng-if="loginController.userDummies() != true"><input type="email" class="form-control" name="email" ng-model="loginController.login.email" placeholder="Email-Addresse" required=""><p class="help-block" ng-if="userForm.email.$error">Ihre Email-Addresse wird benötigt!</p></div><div class="form-group col-lg-6" show-errors="" ng-if="loginController.userDummies() == true"><select class="form-control" name="email" ng-model="loginController.login.email" ng-options="email as email for email in loginController.emailOptions"></select></div><div class="form-group col-lg-6" show-errors=""><input type="password" class="form-control" name="password" ng-model="loginController.login.password" placeholder="Passwort" required=""><p class="help-block" ng-if="loginForm.password.$error">Bitte Passwort eingeben!</p></div></div><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Anmelden"></div></form></section></div></div>'),$templateCache.put("menu/menu.html",'<div class="bg-ultralight-grey"><div class="menu"><section class="container bg-white" ng-if="menuController.checkPermission([\'employee-auto\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Info</h3><p>Bitte übergeben Sie einen Patienten aus Ihrem KIS. Um ein Implantat für diesen anzulegen, müssen Sie die ID über das KIS an den Manager übergeben: /register-implant/ID</p></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\'])"><form name="vitabookTestDataForm" ng-submit="menuController.vitabookTest()"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">vitabook Test</h3></div></div><div class="row"><div class="form-group col-xs-12 col-sm-8" show-errors=""><label>You name the game</label><select class="form-control" name="vitabookTest" ng-model="menuController.vitabookTestData.test" ng-options="test for test in menuController.vitabookTestMethods"></select><p class="help-block" ng-if="initialDataForm.initialKey.$error">Bitte Test auswählen angeben!</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-disabled="menuController.buttonDisabled">Abacadabra</button></div></div></form></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\'])"><form name="initialDataForm" ng-submit="menuController.getInitialFromNationalRegister()"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Initiale Klinik & Nutzer einrichten</h3></div></div><div class="row"><div class="form-group col-xs-12 col-sm-8" show-errors=""><label>Initial Schlüssel zum Abfragen der Klinik</label> <input type="text" class="form-control" name="initialKey" ng-model="menuController.initialData.initialKey" placeholder="Initial Schlüssel" required=""><p class="help-block" ng-if="initialDataForm.initialKey.$error">Bitte Initial-Schlüssel angeben!</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-disabled="menuController.buttonDisabled">Zu vitabook verbinden</button></div></div></form></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">EPRD Test</h3><p>Test Call</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-click="menuController.eprdTest()">Boom</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Daten von vitabook holen</h3><p>Wählen Sie einen Patient aus und fügen Sie diesem weitere Implantat hinzu.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-click="menuController.updateData()">Daten updaten</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'institute\', \'employee\', \'patient\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Implantat erfassen</h3><p>Wählen Sie einen Patient aus und fügen Sie diesem weitere Implantat hinzu.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.registerImplant">Neues Implantat erfassen</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'national\', \'nationalField\' ,\'patient\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Implantat-Register</h3><p>Hier finden Sie eine Übersicht aller verwendeten Implantate.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.manageImplants">Implantate sehen</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'institute\',\'employee\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Implantat-Register</h3><p>Hier finden Sie eine Übersicht aller verwendeten Implantate in Ihrer Klinik und editieren Sie die hinterlegten Daten.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.manageImplants">Implantate verwalten</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'institute\',\'employee\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Patient erfassen</h3><p>Legen Sie einen neuen Patienten an. Im Anschluss können Sie diesem Patienten direkt ein Implantat zuordnen.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.registerPatient">Neuen Patienten erfassen</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'institute\',\'employee\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Patienten-Register</h3><p>Verwalten oder ergänzen Sie Daten der Patienten.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.managePatients">Patienten verwalten</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\', \'national\', \'nationalField\', \'institute\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Mitarbeiter erfassen</h3><p>Legen Sie einen neuen Mitarbeiter an.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.registerUser">Neuen Mitarbeiter erfassen</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\', \'national\', \'nationalField\', \'institute\'])"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Mitarbeiter verwalten</h3><p>Verwalten oder ergänzen Sie Daten der Mitarbeiter.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.manageUsers">Mitarbeiter verwalten</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission(\'superAdmin\')"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Klinik erfassen</h3><p>Legen Sie eine neue Klinik an</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.registerInstitute">Neue Klinik erfassen</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission(\'superAdmin\')"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Klinik-Register</h3><p>Verwalten oder ergänzen Sie Daten der Kliniken.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ui-sref="root.manageInstitutes">Kliniken verwalten</button></div></div></section><section class="container bg-white" ng-if="menuController.checkPermission([\'superAdmin\'])"><form name="vitabookTestDataForm" ng-submit="menuController.vitabookTest()"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Admin Cookie toggle</h3><p>Dummydaten ein/ausschalten.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-click="menuController.toggleDummyCookie()">Polly wants a cookie</button></div></div></form></section></div></div>'),$templateCache.put("signup/signup.html",'<div class="bg-ultralight-grey"><div class="container"><section class="container"><form name="signupForm" ng-submit="save()"><h1>Signup</h1><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Einladungscode</label> <input type="text" class="form-control" name="invitationCode" ng-model="signupController.signup.invitationCode" ng-disabled="signupController.checkSignupCode() == true" placeholder="24-stelligen Einladungscode aus der Email hier rein kopieren" required=""><p class="help-block" ng-if="signupForm.invitationCode.$error">Bitte Einladungscode eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Passwort festlegen</label> <input type="password" class="form-control" name="password" id="password" ng-model="signupController.signup.password" placeholder="Bitte Passwort wählen" required=""><p class="help-block" ng-if="signupForm.password.$error">Bitte Passwort eingeben!</p><label>Passwortstärke <i popover-placement="top" popover="Empfohlen: min. 8 stellig, mit Sonderzeichen, Zahlen und Großbuchstaben" popover-trigger="mouseenter" class="fa fa-question-circle"></i></label><div ng-password-strength="signupController.signup.password" mode="\'bootstrap\'">....</div></div></div><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Passwort festlegen"></div></form></section></div></div>'),$templateCache.put("directives/autocomplete-implant/autocomplete-implant.html",'<div class="implant-autocomplete-directive"><div class="form-group search-field" ng-class="size" show-errors=""><label>{{label}}</label> <input type="text" class="form-control" name="{{itemname}}" ng-model="model" required="" placeholder="{{label}}" id="searchInput" ng-keydown="checkKeyDown($event)" ng-change="search()"><p class="help-block">{{errorMsg}}</p><div class="suggestion-warning alert alert-warning" ng-if="elements.length > 30" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Mehr als 30 Suchergebnisse, bitte weiter filtern!</div><ul id="suggestions" class="suggestions-list" ng-if="elements.length > 0"><li ng-repeat="element in elements" class="blockSpan" ng-click="takeSelection($index)" ng-mouseover="selectIndex($index)" ng-class="{\'active-suggestion\' : selectedIndex===$index}"><span ng-bind-html="element | fatSearch:model"></span></li></ul></div></div>'),$templateCache.put("directives/excel-export/excel-export.html",'<section class="section-export"><div class="row text-right"><button class="btn btn-green" type="button" ng-csv="downloadExcel()" field-separator=";" filename="export.csv">Liste exportieren</button></div></section>'),$templateCache.put("directives/patient-selector-directive/patient-selector-directive.html",'<div class="patient-directive"><div class="form-group col-lg-6"><label ng-if="startLast == true">Letzter erfasster Patient</label> <label ng-if="startLast != true">Aktueller Patient</label> <input type="text" class="form-control" ng-class="{\'highlight\':highlight == true}" name="patientName" ng-model="selectedPatient" ng-disabled="true" required="" placeholder="ausgewählter Patient"><p class="help-block">Bitte Patient auswählen!</p><input type="hidden" class="form-control" name="patient" ng-model="model" ng-if="startLast==true" required=""> <input type="hidden" class="form-control" name="patient" ng-model="model" ng-if="startLast!=true"></div><div class="form-group col-lg-12 search-field"><label>Oder nach Patient suchen</label> <input type="text" placeholder="Patient suchen" id="searchInput" ng-keydown="checkKeyDown($event)" class="form-control" ng-model="searchText" ng-change="search()"><div class="suggestion-warning alert alert-warning" ng-if="patients.length > 30" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Mehr als 30 Suchergebnisse, bitte weiter filtern!</div><ul id="suggestions" class="suggestions-list" ng-if="patients.length > 0"><li ng-repeat="patient in patients" class="blockSpan" ng-click="takeSelection($index)" ng-mouseover="selectIndex($index)" ng-class="{\'active-suggestion\' : selectedIndex===$index}"><span ng-bind-html="patient.lastName | fatSearch:searchText"></span><span>, {{patient.firstName}}, {{patient.birthdate | date:"dd.MM.yyyy"}}, ID: {{patient.patientId}}</span></li></ul></div></div>'),$templateCache.put("directives/checkbox/checkbox.html",'<div class="check-box-directive btn-group" ng-class="inline ? \'display-inline\': null"><a class="btn" ng-class="ngModel == false ? \'btn-danger active\' : \'btn-default\'" ng-click="make(false)" title="{{titleNo}}">Nein</a> <a class="btn" ng-if="notDefined==\'true\'" ng-class="ngModel == null ? \'active btn-default\': \'btn-default\'" ng-click="make(null)" title="{{titleDefault}}">Globale Einstellung verwenden</a> <a class="btn" ng-class="ngModel == true ? \'btn-success active\': \'btn-default\'" ng-click="make(true)" title="{{titleYes}}">Ja</a></div>'),$templateCache.put("directives/user-selector-directive/user-selector-directive.html",'<div class="user-directive"><div class="form-group col-lg-6"><input type="text" placeholder="Erfasser suchen" id="searchInput" ng-keydown="checkKeyDown($event)" class="form-control" ng-model="searchText" ng-change="search()"><div class="suggestion-warning alert alert-warning" ng-if="users.length > 30" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Mehr als 30 Suchergebnisse, bitte weiter filtern!</div><ul id="suggestions" class="suggestions-list" ng-if="users.length > 0"><li ng-repeat="user in users" class="blockSpan" ng-click="takeSelection($index)" ng-mouseover="selectIndex($index)" ng-class="{\'active-suggestion\' : selectedIndex===$index}"><span ng-bind-html="user.lastName | fatSearch:searchText"></span><span>({{user.field}})</span></li></ul></div><div class="form-group col-lg-6"><input type="text" class="form-control" name="userName" ng-model="selectedUser" ng-disabled="true" required="" placeholder="ausgewählter User"><p class="help-block">{{errorMsg}}</p><input type="hidden" class="form-control" name="user" ng-model="model" required=""></div></div>'),$templateCache.put("main/manage/manage-logs/manage-logs.html",'<section class="section-manage section-manage-log container-fluid" id="section-manage-log"><div class="container box-shadow bg-white"><ui-view name="search-logs"></ui-view></div><div class="container box-shadow container-last bg-white"><div class="table-responsive"><table class="table table-hover"><tr class="active"><th>customer</th><th>refId</th><th>model</th><th>attribute</th><th>oldValue</th><th>newValue</th><th>changeDate</th><th>lastSyncedManager</th><th>Id</th><th></th><th></th><th></th></tr><tr ng-repeat="log in manageLogsController.logs | orderBy:predicate:reverse" ng-class="log.model"><td>{{log.customer}}</td><td>{{log.refId}}</td><td>{{log.model}}</td><td>{{log.attribute}}</td><td>{{log.oldValue}}</td><td>{{log.newValue}}</td><td>{{log.changeDate | date:"dd.MM.yyyy HH:mm" }}</td><td>{{log.lastSyncedManager | date:"dd.MM.yyyy HH:mm" }}</td><td>{{log._id}}</td><td></td><td></td><td></td></tr></table></div></div></section>'),$templateCache.put("main/manage/manage-implants/implant-edit-delete-bar.html",'<div class="row"><div class="col-lg-12"><button class="btn btn-cta" ng-if="isImplantSelected()" ng-click="openLightbox()">Implantat bearbeiten</button> <button class="btn btn-red" ng-if="isImplantSelected()" ng-disabled="deleteButtonDisabled" ng-click="deleteImplant()">Implantat löschen</button></div></div>'),$templateCache.put("main/manage/manage-implants/manage-implants.html",'<section class="section-manage section-manage-implant container-fluid" id="section-manage-implant"><div class="container box-shadow bg-white"><ui-view name="search-implants"></ui-view></div><div class="container container-export bg-light-grey"><p class="col-lg-6 counter"><i ng-if="manageImplantsController.countImplants != null"><strong><ng-pluralize count="manageImplantsController.countImplants" when="{ \'one\': \'Es wurde 1 Eintrag gefunden.\', \'other\': \'Es wurden {} Einträge gefunden.\'}"></ng-pluralize></strong></i></p><excel-export export-data="manageImplantsController.implants" class="col-lg-6"></excel-export><hr></div><div class="container box-shadow container-last"><div class="container"></div><div class="table-responsive"><table class="table table-hover table-striped" infinite-scroll="manageImplantsController.addMoreImplants()"><thead><tr><th><a href="" ng-click="predicate = \'art\'; reverse=!reverse">Implantat</a></th><th><a href="" ng-click="predicate = \'manufacturer\'; reverse=!reverse">Hersteller</a></th><th><a href="" ng-click="predicate = \'model\'; reverse=!reverse">Modell</a></th><th><a href="" ng-click="predicate = \'type\'; reverse=!reverse">Typ</a></th><th><a href="" ng-click="predicate = \'lot\'; reverse=!reverse">Losnummer<br>(Charge)</a></th><th><a href="" ng-click="predicate = \'serialNr\'; reverse=!reverse">Seriennummer</a></th><th><a href="" ng-click="predicate = \'referenceNr\'; reverse=!reverse">Referenz-Nr</a></th><th><a href="" ng-click="predicate = \'imOrExplant\'; reverse=!reverse">Art</a></th><th></th><th horizontal-fix="" right="50" ng-if="manageImplantsController.checkPermission([\'superAdmin\', \'institute\', \'employee\', \'patient\'])"></th><th horizontal-fix="" right="0"></th></tr></thead><tbody><tr ng-repeat="implant in manageImplantsController.implants | limitTo: manageImplantsController.showLimit | orderBy:predicate:reverse" ng-click="manageImplantsController.selectImplant(implant)" ng-class="{\'manage-selected\': manageImplantsController.isImplantSelected(implant._id)}"><td>{{implant.art}}</td><td>{{implant.manufacturer}}</td><td>{{implant.model}}</td><td>{{implant.type}}</td><td>{{implant.lot}}</td><td>{{implant.serialNr}}</td><td>{{implant.referenceNr}}</td><td>{{implant.imOrExplant}}</td><td></td><td horizontal-fix="" right="50" ng-if="manageImplantsController.checkPermission([\'superAdmin\', \'institute\', \'employee\', \'patient\'])"><a popover-template="\'main/manage/manage-implants/implant-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></td><td horizontal-fix="" right="0"><a ui-sref="root.implantDetail({implantId: implant._id})"><i class="fa fa-2x fa-eye"></i></a></td></tr></tbody></table></div></div></section><ui-view name="update-implant-lightbox"></ui-view>'),
$templateCache.put("main/manage/manage-patients/manage-patients.html",'<section class="section-manage section-manage-patient container-fluid" id="section-manage-patient"><div class="container box-shadow bg-white"><ui-view name="search-patients"></ui-view></div><div class="container box-shadow container-last bg-white"><div class="table-responsive"><table class="table table-hover table-striped"><tr class="active"><th><a href="" ng-click="predicate = \'patientId\'; reverse=!reverse">laufende Patientennummer</a></th><th><a href="" ng-click="predicate = \'imsurant\'; reverse=!reverse">Versichertennummer</a></th><th>Anrede</th><th><a href="" ng-click="predicate = \'lastName\'; reverse=!reverse">Nachname</a></th><th>Vorname</th><th>Geburtsdatum</th><th></th><th horizontal-fix="" right="50"></th><th horizontal-fix="" right="0"></th></tr><tr ng-repeat="patient in managePatientsController.patients | orderBy:predicate:reverse" ng-click="managePatientsController.selectPatient(patient)" ng-class="{\'manage-selected\': isPatientSelected(patient._id)}"><td>{{patient.patientId}}</td><td>{{patient.insurant}}</td><td>{{patient.gender}}</td><td>{{patient.lastName}}</td><td>{{patient.firstName}}</td><td>{{patient.birthdate | date:"dd.MM.yyyy" }}</td><td></td><td horizontal-fix="" right="50"><a popover-template="\'main/manage/manage-patients/patient-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></td><td horizontal-fix="" right="0"><a ui-sref="root.patientDetail({patientId: patient._id})"><i class="fa fa-2x fa-eye"></i></a></td></tr></table></div></div></section><ui-view name="update-patient-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-patients/patient-edit-delete-bar.html",'<div class="row"><div class="col-lg-12"><button class="btn btn-cta" ng-if="isPatientSelected()" ng-click="openLightbox()">Patient bearbeiten</button> <button class="btn btn-red" ng-if="isPatientSelected()" ng-disabled="deleteButtonDisabled" ng-click="deletePatient()">Patient löschen</button></div></div>'),$templateCache.put("main/manage/manage-institutes/institute-edit-delete-bar.html",'<div class="row"><div class="col-lg-12"><button class="btn btn-cta" ng-if="manageInstitutesController.isInstituteSelected()" ng-click="openLightbox()">Klinik bearbeiten</button> <button class="btn btn-red" ng-if="manageInstitutesController.isInstituteSelected()" ng-disabled="manageInstitutesController.deleteButtonDisabled" ng-click="manageInstitutesController.deleteInstitute()">Klinik löschen</button></div></div>'),$templateCache.put("main/manage/manage-institutes/manage-institutes.html",'<section class="section-manage section-manage-institute container-fluid" id="section-manage-institute"><div class="container box-shadow container-last bg-white"><div class="row"><h2 class="col-lg-6">Kliniken verwalten</h2></div><div class="table-responsive"><table class="table table-hover table-striped"><tr class="active"><th><a href="" ng-click="predicate = \'name\'; reverse=!reverse">Name</a></th><th ng-if="manageInstitutesController.checkPermission([\'superAdmin\'])">Initial Schlüssel</th><th>Verantwortlicher</th><th><a href="" ng-click="predicate = \'email\'; reverse=!reverse">Email</a></th><th>Telefon</th><th>Straße</th><th>Postleitzahl</th><th>Stadt</th><th><a href="" ng-click="predicate = \'_id\'; reverse=!reverse">Referenznummer</a></th><th></th><th horizontal-fix="" right="0"></th><th horizontal-fix="" right="50"></th></tr><tr ng-repeat="institute in manageInstitutesController.institutes | orderBy:predicate:reverse" ng-click="manageInstitutesController.selectInstitute(institute)" ng-class="{\'manage-selected\': manageInstitutesController.isInstituteSelected(institute._id)}"><td>{{institute.name}}</td><td ng-if="manageInstitutesController.checkPermission([\'superAdmin\'])">{{institute.initialKey}}</td><td popover-trigger="mouseenter" popover-append-to-body="true" popover="Telefon: {{institute.responsiblePerson.telephone}} Email: {{institute.responsiblePerson.email}} Straße: {{institute.responsiblePerson.street}} Postleitzahl {{institute.responsiblePerson.zipcode}} Stadt: {{institute.responsiblePerson.city}} ID:{{institute.responsiblePerson._id}}">{{institute.responsiblePerson.lastName}}</td><td>{{institute.email}}</td><td>{{institute.telephone}}</td><td>{{institute.street}}</td><td>{{institute.zipcode}}</td><td>{{institute.city}}</td><td>{{institute._id}}</td><td></td><td horizontal-fix="" right="50"><a popover-template="\'main/manage/manage-institutes/institute-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></td><td horizontal-fix="" right="0"></td></tr></table></div></div></section><ui-view name="update-institute-lightbox"></ui-view>'),$templateCache.put("main/register/register-implant/eprd.html",'<fieldset class="fieldset-eprd"><h4>Zusätzliche Daten für das EPRD</h4><div class="row"><div class="form-group col-lg-6"><label>Seite</label><select class="form-control" name="seite" ng-model="registerImplantController.implantData.eprd.seite" ng-options="seite.code as seite.name for seite in registerImplantController.eprdValues.seite"></select></div></div><div class="row"><div class="form-group col-lg-6"><label>Artikel Typ</label><select class="form-control" name="artikeltyp" ng-model="registerImplantController.implantData.eprd.artikeltyp" ng-options="artikeltyp.code as artikeltyp.name for artikeltyp in registerImplantController.eprdValues.artikeltyp"></select></div><div class="form-group col-lg-6"><label>Hersteller</label><select class="form-control" name="hersteller" ng-model="registerImplantController.implantData.eprd.hersteller" ng-options="hersteller.code as hersteller.name for hersteller in registerImplantController.eprdValues.hersteller"></select></div></div><div class="row"><div class="form-group col-lg-6"><label>Einheit</label><select class="form-control" name="einheit" ng-model="registerImplantController.implantData.eprd.einheit" ng-options="einheit.code as einheit.name for einheit in registerImplantController.eprdValues.einheit"></select></div><div class="form-group col-lg-6"><label>Eingriffart</label><select class="form-control" name="arteingriff" ng-model="registerImplantController.implantData.eprd.arteingriff" ng-options="arteingriff.code as arteingriff.name for arteingriff in registerImplantController.eprdValues.arteingriff"></select></div><div class="form-group col-lg-6" ng-if="registerImplantController.implantData.eprd.gelenk==\'1\' && registerImplantController.implantData.eprd.arteingriff==\'1\'"><label>Vor-Operation (Hüfte)</label><select class="form-control" name="vorOpHuefte" ng-model="registerImplantController.implantData.eprd.vorOpHuefte" ng-options="vorOpHuefte.code as vorOpHuefte.name for vorOpHuefte in registerImplantController.eprdValues.vorOpHuefte"></select></div><div class="form-group col-lg-6" ng-if="registerImplantController.implantData.eprd.gelenk==\'2\' && registerImplantController.implantData.eprd.arteingriff==\'1\'"><label>Vor-Operation (Knie)</label><select class="form-control" name="vorOpKnie" ng-model="registerImplantController.implantData.eprd.vorOpKnie" ng-options="vorOpKnie.code as vorOpKnie.name for vorOpKnie in registerImplantController.eprdValues.vorOpKnie"></select></div></div><div class="row"><div class="form-group col-lg-6" ng-if="registerImplantController.implantData.eprd.gelenk==\'1\' && registerImplantController.implantData.eprd.arteingriff==\'3\'"><label>Wechselgrund (Hüfte)</label><select class="form-control" name="wechselgrundHuefte" ng-model="registerImplantController.implantData.eprd.wechselgrundHuefte" ng-options="wechselgrundHuefte.code as wechselgrundHuefte.name for wechselgrundHuefte in registerImplantController.eprdValues.wechselgrundHuefte"></select></div><div class="form-group col-lg-6" ng-if="registerImplantController.implantData.eprd.gelenk==\'2\' && registerImplantController.implantData.eprd.arteingriff==\'3\'"><label>Wechselgrund (Knie)</label><select class="form-control" name="wechselgrundKnie" ng-model="registerImplantController.implantData.eprd.wechselgrundKnie" ng-options="wechselgrundKnie.code as wechselgrundKnie.name for wechselgrundKnie in registerImplantController.eprdValues.wechselgrundKnie"></select></div><div class="form-group col-lg-6" ng-if="registerImplantController.implantData.eprd.arteingriff==\'3\'"><label>Zweizeitwechsel</label><select class="form-control" name="zweizeitwechsel" ng-model="registerImplantController.implantData.eprd.zweizeitwechsel" ng-options="zweizeitwechsel.code as zweizeitwechsel.name for zweizeitwechsel in registerImplantController.eprdValues.zweizeitwechsel"></select></div></div></fieldset>'),$templateCache.put("main/register/register-implant/register-implant.html",'<section class="section-register section-register-implant container-fluid" id="form"><div class="container container-last box-shadow bg-white"><div class="row"><h2 class="col-lg-6">Implantat anlegen</h2></div><hr><form name="implantDataForm"><div class="row" ng-if="registerImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\']) && registerImplantController.patient == null"><patient-selector form="implantDataForm" model="registerImplantController.implantData.patient" eprd-patient="registerImplantController.eprdPatient" start-last="true" highlight="registerImplantController.highlight"></patient-selector></div><div class="row" ng-if="registerImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\'])"><div class="col-lg-12"><a class="btn btn-cta" ui-sref="root.registerPatient({previousRoute: \'root.registerImplant\'})">Neuen Patienten anlegen</a></div></div><div class="row" ng-if="registerImplantController.patient != null"><div class="form-group col-lg-8"><label>Patient</label><div class="form-control" disabled="disabled"><p>{{registerImplantController.patient.firstName}} {{registerImplantController.patient.lastName}} {{registerImplantController.patient.birthdate | date:"dd.MM.yyyy"}} {{registerImplantControllerpatient.patientId}}</p></div></div></div><hr ng-if="registerImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\'])"><div class="row"><div class="form-group col-lg-6"><label>Körperregion</label><select class="form-control" name="bodyPart" ng-model="registerImplantController.implantData.bodyPart" ng-options="bodyPart for bodyPart in registerImplantController.bodyParts" ng-change="registerImplantController.updateEprd()" required=""></select></div><autocomplete-implant model="registerImplantController.implantData.art" form="implantDataForm" itemname="art" label="Bezeichnung Implantat" size="col-lg-6" error-msg="Bitte Bezeichnung angeben!"></autocomplete-implant></div><div class="row"><autocomplete-implant model="registerImplantController.implantData.manufacturer" form="implantDataForm" itemname="manufacturer" label="Hersteller" size="col-lg-4" error-msg="Bitte Hersteller angeben!"></autocomplete-implant><autocomplete-implant model="registerImplantController.implantData.model" form="implantDataForm" itemname="model" label="Modell" size="col-lg-4" error-msg="Bitte Modell angeben!"></autocomplete-implant><autocomplete-implant model="registerImplantController.implantData.type" form="implantDataForm" itemname="type" label="Typ" size="col-lg-4" error-msg="Bitte Typ angeben!"></autocomplete-implant></div><fieldset class="fieldset-scan"><h4>Automatische Datenerfassung durch Scan</h4><div class="row"><div class="form-group col-lg-8" show-errors=""><label>Lot (Losnummer/Charge)</label> <input type="text" class="form-control" name="lot" ng-model="registerImplantController.implantData.lot" placeholder="Losnummer (Lot)" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.lot.$error">Bitte Losnummer (Lot) als Zahlen ohne Buchstaben eingeben!</p></div></div><div class="row"><div class="form-group col-lg-8" show-errors=""><label>SN (Seriennummer)</label> <input type="number" class="form-control" name="serialNr" ng-model="registerImplantController.implantData.serialNr" placeholder="Seriennummer" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.serialNr.$error">Bitte Seriennummer als Zahlen ohne Buchstaben eingeben!</p></div></div><div class="row"><div class="form-group col-lg-8" show-errors=""><label>Referenz-Nr.</label> <input type="text" class="form-control" name="referenceNr" ng-model="registerImplantController.implantData.referenceNr" placeholder="Referenznummer" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.referenceNr.$error">Bitte Referenznummer als Zahlen ohne Buchstaben angeben!</p></div></div></fieldset><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Operations Nummer</label> <input type="text" class="form-control" name="operationId" ng-model="registerImplantController.implantData.operationId" placeholder="Operations Nummer" enter-to-tab="" ng-disabled="registerImplantController.implantsFromPreviousOperations!=null"><p class="help-block" ng-if="implantDataForm.operationId.$error">Bitte Operations Nummer angeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Operations Name</label> <input type="text" class="form-control" name="operationName" ng-model="registerImplantController.implantData.operationName" placeholder="Operations Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.operationName.$error">Bitte Operations Name angeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Material Nr</label> <input type="text" class="form-control" name="materialNr" ng-model="registerImplantController.implantData.materialNr" placeholder="Material Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.materialNr.$error">Bitte Operations Nummer angeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Lagerort</label> <input type="text" class="form-control" name="storage" ng-model="registerImplantController.implantData.storage" placeholder="Operations Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.storage.$error">Bitte Lagerort angeben!</p></div></div><div class="row" ng-if="registerImplantController.checkPermission([\'superAdmin\', \'institute\'])"><div class="form-group col-lg-6"><label>Erfasser</label><select class="form-control" name="institute" ng-model="registerImplantController.implantData.newCreator" ng-options="coWorker._id as coWorker.lastName + \' \' + coWorker.firstName + \' (\' + coWorker.field + \')\' for coWorker in registerImplantController.coWorkers" required=""></select><p class="help-block" ng-if="implantDataForm.newCreator.$error">Erfassers wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Name implantierende Einrichtung</label> <input type="text" class="form-control" name="instituteName" ng-model="registerImplantController.instituteName" placeholder="Name implantierende Einrichtung" ng-disabled="true"> <input type="hidden" class="form-control" name="institute" ng-model="registerImplantController.implantData.institute" required=""><p class="help-block" ng-if="implantDataForm.institute.$error">Name der implantierenden Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Art</label><select class="form-control" ng-model="registerImplantController.implantData.imOrExplant"><option value="Implant">Implant</option><option value="Explant">Explant</option></select></div><div class="form-group col-lg-6" show-errors=""><label>Im/-Explantierungsdatum</label> <input type="date" class="form-control" name="saveDate" ng-model="registerImplantController.implantData.saveDate" placeholder="Im-/Explantierungsdatum YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.saveDate.$error">Im-/Explantierungsdatum wird benötigt!</p></div></div><div class="row controllDate"><div class="form-group col-lg-6"><label>Termin Kontrolluntersuchung</label><p class="help-block" ng-if="implantDataForm.controllDate.$error">Der Termin zur Kontrolluntersuchung wird benötigt!</p><select class="form-control" ng-model="registerImplantController.datePreset" ng-change="registerImplantController.setControllDate()"><option value="1">In einem Monat</option><option value="3">In drei Monaten</option><option value="6">In sechs Monaten</option><option value="12">In einem Jahr</option><option value="36">In drei Jahren</option></select></div><div class="form-group col-lg-6" show-errors=""><input type="date" class="form-control" name="controllDate" ng-model="registerImplantController.implantData.controllDate" placeholder="Datum Kontrolluntersuchung YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.controllDate.$error">Der Termin zur Kontrolluntersuchung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="registerImplantController.implantData.sendToEprd" not-defined="true" ng-change="registerImplantController.checkEprdShow()" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="registerImplantController.implantData.sendToVitabook" not-defined="true" enter-to-tab=""></checkbox></div></div><ui-view name="eprd" ng-if="registerImplantController.showEprdOptions"></ui-view><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Kommentar</label> <textarea class="form-control" name="comment" ng-model="registerImplantController.implantData.comment" placeholder="Kommentar" enter-to-tab=""></textarea><p class="help-block" ng-if="implantDataForm.comment.$error">Bitte Kommentar eingeben!</p></div></div><div class="row text-right btn-next-implant"><button class="btn btn-orange btn-lg" ng-disabled="registerImplantController.buttonDisabled" ng-click="save(\'new\')">Implantat speichern<br>und neues Implantat anlegen</button> <button class="btn btn-cta btn-lg" ng-disabled="registerImplantController.buttonDisabled" ng-click="save(\'identical\')">Implantat speichern<br>und identisches Implantat anlegen</button> <button class="btn btn-green btn-lg" ng-disabled="registerImplantController.buttonDisabled" ng-click="save(\'end\')">Implantat speichern<br>und beenden</button></div></form></div></section><section class="container container-last box-shadow bg-white" ng-if="registerImplantController.implantsFromPreviousOperations!=null"><h2>Implantate in dieser Operation</h2><div class="table-responsive"><table class="table table-hover table-striped"><thead><tr><th><a href="" ng-click="predicate = \'art\'; reverse=!reverse">Implantat</a></th><th><a href="" ng-click="predicate = \'manufacturer\'; reverse=!reverse">Hersteller</a></th><th><a href="" ng-click="predicate = \'model\'; reverse=!reverse">Modell</a></th><th><a href="" ng-click="predicate = \'type\'; reverse=!reverse">Typ</a></th><th><a href="" ng-click="predicate = \'serialNr\'; reverse=!reverse">Seriennummer</a></th><th><a href="" ng-click="predicate = \'lot\'; reverse=!reverse">Losnummer</a></th><th><a href="" ng-click="predicate = \'referenceNr\'; reverse=!reverse">Referenz-Nr</a></th><th><a href="" ng-click="predicate = \'imOrExplant\'; reverse=!reverse">Art</a></th></tr></thead><tbody><tr ng-repeat="implant in registerImplantController.implantsFromPreviousOperations | orderBy:predicate:reverse"><td>{{implant.art}}</td><td>{{implant.manufacturer}}</td><td>{{implant.model}}</td><td>{{implant.type}}</td><td>{{implant.serialNr}}</td><td>{{implant.lot}}</td><td>{{implant.referenceNr}}</td><td>{{implant.imOrExplant}}</td></tr></tbody></table></div></section>'),$templateCache.put("main/register/register-institute/register-institute.html",'<section class="section-register section-register-institute container-fluid" id="form"><div class="container box-shadow container-last bg-white"><div class="row"><h2 class="col-lg-6">Klinik anlegen</h2></div><form name="instituteDataForm" ng-submit="save()"><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Url zum Register der Klinik</label> <input type="text" class="form-control" name="baseUrl" ng-model="registerInstituteController.instituteData.baseUrl" placeholder="Bsp. http://31.47.244.70:8080/" required=""><p class="help-block" ng-if="instituteDataForm.baseUrl.$error">Bitte Url des lokalen Registers eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Vitabook Id</label> <input type="number" class="form-control" name="vitabookId" ng-model="registerInstituteController.instituteData.vitabookId" placeholder="Id der Klinik bei vitabook"><p class="help-block" ng-if="instituteDataForm.vitabookId.$error">Die vitabook-Id der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>IK-Nummer</label> <input type="text" class="form-control" name="instituteNr" ng-model="registerInstituteController.instituteData.instituteNr" placeholder="IK-Nummer der Klinik"><p class="help-block" ng-if="instituteDataForm.instituteNr.$error">Die IK-Nummer der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Name</label> <input type="text" class="form-control" name="name" ng-model="registerInstituteController.instituteData.name" placeholder="Name der Einrichtung"><p class="help-block" ng-if="instituteDataForm.name.$error">Bitte Institutsnamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Telefon</label> <input type="tel" class="form-control" name="telephone" ng-model="registerInstituteController.instituteData.telephone" placeholder="Telefonnummer"><p class="help-block" ng-if="instituteDataForm.telephone.$error">Die Telefonnummer der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Email</label> <input type="email" class="form-control" name="email" ng-model="registerInstituteController.instituteData.email" placeholder="Email-Addresse" required=""><p class="help-block" ng-if="instituteDataForm.email.$error">Die Email-Addresse der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="registerInstituteController.instituteData.street" placeholder="Straße / Hausnummer"><p class="help-block" ng-if="instituteDataForm.street.$error">Die Straße + Hausnummer der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="registerInstituteController.instituteData.zipcode" placeholder="PLZ" ng-minlength="3"><p class="help-block" ng-if="instituteDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="registerInstituteController.instituteData.city" placeholder="Stadt" ng-minlength="3"><p class="help-block" ng-if="instituteDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="registerInstituteController.instituteData.sendToEprd" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="registerInstituteController.instituteData.sendToVitabook" enter-to-tab=""></checkbox></div></div><fieldset class="fieldset-eprd" ng-if="registerInstituteController.instituteData.sendToEprd == true"><h4>EPRD</h4><div class="row"><div class="form-group col-lg-6" show-errors=""><label>EPRD Mandanten Nr</label> <input type="text" class="form-control" name="eprdClientNr" ng-model="registerInstituteController.instituteData.eprdClientNr" placeholder="EPRD Mandanten Nr"><p class="help-block" ng-if="instituteDataForm.eprdClientNr.$error">Die EPRD Mandanten Nr der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>EPRD Lizenznummer</label> <input type="text" class="form-control" name="eprdClientLizenz" ng-model="registerInstituteController.instituteData.eprdClientLizenz" placeholder="EPRD Lizenznummer"><p class="help-block" ng-if="instituteDataForm.eprdClientLizenz.$error">Bitte geben Sie die EPRD Lizenznummer an!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Einrichtungsnummer</label> <input type="text" class="form-control" name="locationNr" ng-model="registerInstituteController.instituteData.locationNr" placeholder="Einrichtungsnummer"><p class="help-block" ng-if="instituteDataForm.locationNr.$error">Die Einrichtungsnummer der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Betriebsstätte</label> <input type="text" class="form-control" name="unitNr" ng-model="registerInstituteController.instituteData.unitNr" placeholder="Betriebsstätte"><p class="help-block" ng-if="instituteDataForm.unitNr.$error">Bitte geben Sie die Betriebsstätte an!</p></div></div></fieldset><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Klinik erfassen" ng-disabled="registerInstituteController.buttonDisabled"></div></form></div></section>'),$templateCache.put("main/register/register-patient/register-patient.html",'<section class="section-register-patient container-fluid" id="form"><div class="container box-shadow container-last bg-white"><div class="row"><h2 class="col-lg-6">Patient anlegen</h2></div><form name="patientDataForm" ng-submit="save()"><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Laufende Patientennummer</label> <input type="text" class="form-control" name="patientId" ng-model="registerPatientController.patientData.patientId" placeholder="laufende Patientennummer" required="" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.patientId.$error">Bitte laufende Patientennummer eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Implantatausweisnummer</label> <input type="text" class="form-control" name="implantCardNr" ng-model="registerPatientController.patientData.implantCardNr" placeholder="Nummer Implantatausweis" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.implantCardNr.$error">Bitte die Nummer des Implantatausweises eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Implantatausweis Sicherheitscode</label> <input type="text" class="form-control" name="implantCardSecurity" ng-model="registerPatientController.patientData.implantCardSecurity" placeholder="Implantatausweis Sicherheitsnummer" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.implantCardSecurity.$error">Bitte Implantatausweis Sicherheitsnummer eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Anrede</label><select class="form-control" name="gender" ng-model="registerPatientController.patientData.gender" required=""><option value="" disabled="" selected="" style="display:none;">Geschlecht auswählen</option><option value="Herr">Herr</option><option value="Frau">Frau</option></select><p class="help-block" ng-if="patientDataForm.gender.$error">Bitte Anrede auswählen!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Vorname</label> <input type="text" class="form-control" name="firstName" ng-model="registerPatientController.patientData.firstName" placeholder="Vornachname" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.firstName.$error">Bitte Vornamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Nachname</label> <input type="text" class="form-control" name="lastName" ng-model="registerPatientController.patientData.lastName" placeholder="Nachname" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.lastName.$error">Bitte Nachnamen eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Geburtsdatum</label> <input type="date" class="form-control" name="birthdate" ng-model="registerPatientController.patientData.birthdate" placeholder="Geburtsdatum YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.birthdate.$error">Ihre Geburtsdatum wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Versicherungsnummer/Krankenkasse</label> <input type="text" class="form-control" name="insurance" ng-model="registerPatientController.patientData.insurance" placeholder="Versicherungsnummer oder Krankenkasse" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.insurance.$error">Ihre Versicherungsnummer/Krankenkasse wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Versichertennummer</label> <input type="text" class="form-control" name="insurant" ng-model="registerPatientController.patientData.insurant" placeholder="Versichertennummer" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.insurant.$error">Ihre Versichertennummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Telefonnummer</label> <input type="tel" class="form-control" name="telephone" ng-model="registerPatientController.patientData.telephone" placeholder="Telefonnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.telephone.$error">Ihre Telefonnummer wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Handynummer</label> <input type="tel" class="form-control" name="mobile" ng-model="registerPatientController.patientData.mobile" placeholder="Mobilnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.mobile.$error">Ihre Mobilnummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Emailadresse</label> <input type="email" class="form-control" name="email" ng-model="registerPatientController.patientData.email" placeholder="Email-Adresse" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.email.$error">Ihre Email-Adresse wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="registerPatientController.patientData.street" placeholder="Straße / Hausnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.street.$error">Ihre Straße + Hausnummer wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="registerPatientController.patientData.zipcode" placeholder="PLZ" ng-minlength="3" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="registerPatientController.patientData.city" placeholder="Stadt" ng-minlength="3" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Aufnahmedatum</label> <input type="date" class="form-control" name="saveDate" ng-model="registerPatientController.patientData.saveDate" placeholder="Datum Aufnahme YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.saveDate.$error">Das Aufnahmedatum wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="registerPatientController.patientData.sendToEprd" not-defined="true" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="registerPatientController.patientData.sendToVitabook" not-defined="true" enter-to-tab=""></checkbox></div></div><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="{{registerPatientController.buttonText}}" ng-disabled="registerPatientController.buttonDisabled"></div></form></div></section>'),
$templateCache.put("main/register/register-user/register-user.html",'<section class="section-register-user container-fluid" id="form"><div class="container box-shadow container-last bg-white"><div class="row"><h2 class="col-lg-6">Mitarbeiter anlegen</h2></div><form name="userDataForm" ng-submit="save()"><div class="row" ng-if="registerUserController.checkPermission(\'superAdmin\')"><div class="form-group col-lg-6"><label>Klinik</label><select class="form-control" name="institute" ng-model="registerUserController.userData.institute" ng-options="institute._id as institute.name for institute in registerUserController.institutes" required=""></select><p class="help-block" ng-if="userDataForm.gender.$error">Bitte Klinik wählen</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Anrede</label><select class="form-control" name="gender" ng-model="registerUserController.userData.gender" placeholder="Geschlecht"><option value="" disabled="" selected="" style="display:none;">Geschlecht auswählen</option><option value="Herr">Herr</option><option value="Frau">Frau</option></select><p class="help-block" ng-if="userDataForm.gender.$error">Bitte Anrede auswählen!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Vorname</label> <input type="text" class="form-control" name="firstName" ng-model="registerUserController.userData.firstName" placeholder="Vornachname"><p class="help-block" ng-if="userDataForm.firstName.$error">Bitte Vornamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Nachname</label> <input type="text" class="form-control" name="lastName" ng-model="registerUserController.userData.lastName" placeholder="Nachname" required=""><p class="help-block" ng-if="userDataForm.lastName.$error">Bitte Nachnamen eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Berechtigungslevel</label><select class="form-control" name="permissionLevel" ng-model="registerUserController.userData.permissionLevel"><option value="" disabled="" selected="" style="display:none;">Berechtigungslevel auswählen</option><option ng-if="registerUserController.checkPermission(\'superAdmin\')" value="superAdmin">Super Admin</option><option ng-if="registerUserController.checkPermission([\'superAdmin\', \'national\'])" value="national">Nationale Ebene</option><option ng-if="registerUserController.checkPermission([\'superAdmin\', \'nationalField\'])" value="nationalField">Nationale Ebene, Fachbereich</option><option ng-if="registerUserController.checkPermission(\'superAdmin\')" value="institute">Klinik Ebene</option><option ng-if="registerUserController.checkPermission([\'superAdmin\', \'institute\'])" value="employee">Arzt/Assistent Ebene (mit Lesefunktion)</option><option ng-if="registerUserController.checkPermission([\'superAdmin\', \'institute\'])" value="employee-auto">Arzt/Assistent Ebene (nur Erfassen)</option></select><p class="help-block" ng-if="userDataForm.permissionLevel.$error">Bitte Berechtigungslevel auswählen!</p></div><div class="form-group col-lg-6" show-errors=""><label>Fachgebiet</label> <input type="text" class="form-control" name="field" ng-model="registerUserController.userData.field" placeholder="Abteilung"><p class="help-block" ng-if="userDataForm.field.$error">Bitte Abteilung angeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Telefonnummer</label> <input type="tel" class="form-control" name="telephone" ng-model="registerUserController.userData.telephone" placeholder="Telefonnummer"><p class="help-block" ng-if="userDataForm.telephone.$error">Ihre Telefonnummer wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Handynummer</label> <input type="tel" class="form-control" name="mobile" ng-model="registerUserController.userData.mobile" placeholder="Mobilnummer"><p class="help-block" ng-if="userDataForm.mobile.$error">Ihre Mobilnummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Email</label> <input type="email" class="form-control" name="email" ng-model="registerUserController.userData.email" placeholder="Email-Addresse" required=""><p class="help-block" ng-if="userDataForm.email.$error">Ihre Email-Addresse wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="registerUserController.userData.street" placeholder="Straße / Hausnummer"><p class="help-block" ng-if="userDataForm.street.$error">Ihre Straße + Hausnummer wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="registerUserController.userData.zipcode" placeholder="PLZ" ng-minlength="3"><p class="help-block" ng-if="userDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="registerUserController.userData.city" placeholder="Stadt" ng-minlength="3"><p class="help-block" ng-if="userDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Mitarbeiter erfassen" ng-disabled="registerUserController.buttonDisabled"></div></form></div></section>'),$templateCache.put("main/manage/manage-users/manage-users.html",'<section class="section-manage section-manage-user container-fluid" id="section-manage-user"><div class="container box-shadow container-last bg-white"><div class="row"><h2 class="col-lg-6">Mitarbeiter verwalten</h2></div><div class="table-responsive"><table class="table table-hover table-striped"><tr class="active"><th>Anrede</th><th><a href="" ng-click="predicate = \'lastName\'; reverse=!reverse">Nachname</a></th><th>Vorname</th><th>Klinik</th><th><a href="" ng-click="predicate = \'field\'; reverse=!reverse">Fachrichtung</a></th><th><a href="" ng-click="predicate = \'email\'; reverse=!reverse">Email</a></th><th>Telefon</th><th>Mobil</th><th>Straße</th><th>Postleitzahl</th><th>Stadt</th><th><a href="" ng-click="predicate = \'permissionLevel\'; reverse=!reverse">Berechtigungslevel</a></th><th><a href="" ng-click="predicate = \'active\'; reverse=!reverse">Aktiv</a></th><th><a href="" ng-click="predicate = \'_id\'; reverse=!reverse">Referenznummer</a></th><th></th><th></th><th></th></tr><tr ng-repeat="user in manageUsersController.users | orderBy:predicate:reverse" ng-click="manageUsersController.selectUser(user)" ng-class="{\'manage-selected\': manageUsersController.isUserSelected(user._id)}"><td>{{user.gender}}</td><td>{{user.lastName}}</td><td>{{user.firstName}}</td><td popover-trigger="mouseenter" popover-append-to-body="true" popover="Telefon: {{user.institute.telephone}} Email: {{user.institute.email}} Straße: {{user.institute.street}} Postleitzahl {{user.institute.zipcode}} Stadt: {{user.institute.city}} ID:{{user.institute._id}}">{{user.institute.name}}</td><td>{{user.field}}</td><td>{{user.email}}</td><td>{{user.telephone}}</td><td>{{user.mobile}}</td><td>{{user.street}}</td><td>{{user.zipcode}}</td><td>{{user.city}}</td><td>{{user.permissionLevel}}</td><td>{{user.active | booleanX}}</td><td>{{user._id}}</td><td horizontal-fix="" right="50"><a popover-template="\'main/manage/manage-users/user-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></td><td horizontal-fix="" right="0"><a ui-sref="root.userDetail({userId: user._id})"><i class="fa fa-2x fa-eye"></i></a></td></tr></table></div></div></section><ui-view name="update-user-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-users/user-edit-delete-bar.html",'<div class="row"><div class="col-lg-12"><button class="btn btn-cta" ng-if="isUserSelected()" ng-click="openLightbox()">User bearbeiten</button> <button class="btn btn-red" ng-if="isUserSelected() && manageUsersController.checkPermission([\'superAdmin\', \'institute\'])" ng-disabled="deleteButtonDisabled" ng-click="deleteUser()">User löschen</button></div></div>'),$templateCache.put("main/manage/manage-logs/search-logs/search-logs.html",'<section class="col-lg-12 search-logs"><div class="row"><h1 class="col-lg-6">Logs filtern</h1></div><form name="logDataForm" ng-submit="filter()"><div class="row"><div class="form-group col-lg-8"><label>Customer</label><select class="form-control" ng-model="searchLogsController.logData.customer"><option ng-repeat="customer in searchLogsController.customersList">{{customer}}</option></select></div></div><hr><div class="row"><div class="form-group col-lg-8"><label>Model</label><select class="form-control" ng-model="searchLogsController.logData.model"><option ng-repeat="model in searchLogsController.modelsList">{{model}}</option></select></div></div><div class="row"><div class="form-group col-lg-8"><label>Attribute</label><select class="form-control" ng-model="searchLogsController.logData.attribute"><option ng-repeat="attribute in searchLogsController.attributesList">{{attribute}}</option></select></div></div><hr><div class="row text-right"><input type="submit" class="btn btn-cta btn-lg" value="Logs suchen" ng-disabled="searchLogsController.searchButtonDisabled" ng-click="searchLogsController.filter()"></div><div class="row text-right"><button class="btn btn-green" ng-click="searchLogsController.resetFilter()">Zurücksetzen</button></div></form></section>'),$templateCache.put("main/manage/manage-implants/downloads-implant/downloads-implant.html",'<div class="bg-ultralight-grey"><div class="downloads-implant"><section class="container bg-white"><div class="row"><div class="col-xs-12 col-sm-8"><h3 class="text-uppercase">Implantatausweis Druckversion</h3><p>In einem neuen Fenster öffnet sich die Druckversion des Implantatausweises.</p></div><div class="col-xs-12 col-sm-4"><button class="btn btn-cta" ng-click="downloadsImplantController.getImplantCard()">Ausweis öffnen</button></div></div></section></div></div>'),$templateCache.put("main/manage/manage-implants/search-implants/search-implants.html",'<section class="col-lg-12 search-implants"><div class="row"><h1 class="col-lg-6">Implantate filtern</h1></div><form name="implantDataForm" ng-submit="filter()"><div class="row"><div class="form-group col-lg-8"><label>Implantat</label><select class="form-control" ng-model="searchImplantsController.implantData.art" ng-change="searchImplantsController.updateArt()"><option ng-repeat="art in searchImplantsController.artsList">{{art}}</option></select></div></div><hr><div class="row"><div class="form-group col-lg-4"><label>Hersteller</label><select class="form-control" ng-model="searchImplantsController.implantData.manufacturer" ng-change="searchImplantsController.updateManufacturer()"><option ng-repeat="manufacturer in searchImplantsController.manufacturersList">{{manufacturer}}</option></select></div><div class="form-group col-lg-4" ng-if="searchImplantsController.modelsList.length > 0"><label>Modell</label><select class="form-control" ng-model="searchImplantsController.implantData.model" ng-change="searchImplantsController.updateModel()"><option ng-repeat="model in searchImplantsController.modelsList">{{model}}</option></select></div><div class="form-group col-lg-4" ng-if="searchImplantsController.typesList.length > 0"><label>Typ</label><select class="form-control col-lg-4" ng-model="searchImplantsController.implantData.type" ng-change="searchImplantsController.updateType()"><option ng-repeat="type in searchImplantsController.typesList">{{type}}</option></select></div></div><hr><div class="row" ng-if="searchImplantsController.checkPermission([\'superAdmin\', \'national\', \'nationalField\', \'institute\', \'employee\'])"><div class="form-group col-lg-4"><label>von Losnummer (Charge)</label> <input type="number" class="form-control" name="lotMin" ng-model="searchImplantsController.implantData.lotMinRange" placeholder="Seriennummer von" ng-blur="searchImplantsController.setLotNr(\'min\')" enter-to-tab=""></div><div class="form-group col-lg-4"><label>bis Losnummer (Charge)</label> <input type="number" class="form-control" name="lotMax" ng-model="searchImplantsController.implantData.lotMaxRange" placeholder="Seriennummer bis" ng-blur="searchImplantsController.setLotNr(\'max\')" ng-disabled="searchImplantsController.specificLotNr" enter-to-tab=""></div><div class="checkbox col-lg-4"><label><input type="checkbox" name="specificLotNr" ng-model="searchImplantsController.specificLotNr" ng-change="searchImplantsController.setLotNr(\'check\')"> Spezifische Losnummer suchen</label></div></div><div class="row" ng-if="searchImplantsController.checkPermission([\'superAdmin\', \'national\', \'nationalField\', \'institute\', \'employee\'])"><div class="form-group col-lg-4"><label>von Seriennummer</label> <input type="number" class="form-control" name="serialNrMin" ng-model="searchImplantsController.implantData.serialMinRange" placeholder="Seriennummer von" ng-blur="searchImplantsController.setSerialNr(\'min\')" enter-to-tab=""></div><div class="form-group col-lg-4"><label>bis Seriennummer</label> <input type="number" class="form-control" name="serialNrMax" ng-model="searchImplantsController.implantData.serialMaxRange" placeholder="Seriennummer bis" ng-blur="searchImplantsController.setSerialNr(\'max\')" ng-disabled="searchImplantsController.specificSerialNr" enter-to-tab=""></div><div class="checkbox col-lg-4"><label><input type="checkbox" name="specificSerialNr" ng-model="searchImplantsController.specificSerialNr" ng-change="searchImplantsController.setSerialNr(\'check\')"> Spezifische Seriennummer suchen</label></div></div><div class="row"><div class="form-group col-lg-4"><label>Im-/Explant</label><select class="form-control" ng-model="searchImplantsController.implantData.imOrExplant"><option value=""></option><option value="Implant">Implant</option><option value="Explant">Explant</option></select></div></div><div class="row intervallDate"><div class="form-group col-lg-6"><label>Zeitraum</label><select class="form-control" name="searchIntervall" ng-model="searchImplantsController.implantData.searchIntervall" ng-options="option.intervall as option.name for option in searchImplantsController.searchIntervallOptions"></select></div></div><hr><div class="row text-right"><input type="submit" class="btn btn-cta btn-lg" value="Implantate suchen" ng-disabled="searchImplantsController.searchButtonDisabled" ng-click="searchImplantsController.filter()"></div><div class="row text-right"><button class="btn btn-green" ng-click="searchImplantsController.resetFilter()">Zurücksetzen</button></div></form></section>'),$templateCache.put("main/manage/manage-patients/search-patients/search-patients.html",'<section class="col-lg-12 search-patients"><div class="row"><h1 class="col-lg-6">Patient suchen</h1></div><form name="patientDataForm" ng-submit="filter()"><div class="row"><div class="form-group col-lg-6"><patient-selector form="patientDataForm" model="searchPatientsController.patientData._id" start-last="true"></patient-selector></div></div><hr><div class="row text-right"><input type="submit" class="btn btn-cta btn-lg" value="Patient suchen" ng-disabled="searchPatientsController.searchButtonDisabled" ng-click="searchPatientsController.filter()"></div></form></section>'),$templateCache.put("main/manage/manage-patients/detail-patient/detail-patient.html",'<section class="section-detail section-detail-patient container-fluid" id="section-detail-patient"><div class="alert alert-danger text-center" ng-if="detailPatientController.patient == null" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Keine Berechtigung zum Einsehen dieser Benutzerdaten!</div><div class="container" ng-if="detailPatientController.patient"><div class="row box-shadow bg-white"><table class="table table-hover table-striped table-fat-first-row table-patient"><tr><th colspan="3">{{detailPatientController.patient.gender}} {{detailPatientController.patient.firstName}} {{detailPatientController.patient.lastName}} | Patienten-Id: {{detailPatientController.patient.patientId}}</th><th><a popover-template="\'main/manage/manage-patients/patient-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></th></tr><tr><td>Versicherung</td><td>{{detailPatientController.patient.insurance}}</td><td>Geburtsdatum</td><td>{{detailPatientController.patient.birthdate | date:"dd.MM.yyyy" }}</td></tr><tr><td>Versichertennummer</td><td>{{detailPatientController.patient.insurant}}</td><td>Telefon</td><td>{{detailPatientController.patient.telephone}}</td></tr><tr><td>Referenznummer</td><td>{{detailPatientController.patient._id}}</td><td>Mobil</td><td>{{detailPatientController.patient.mobile}}</td></tr><tr><td>Implantatsausweisnummer</td><td>{{detailPatientController.patient.implantCardNr}}</td><td>Email</td><td>{{detailPatientController.patient.email}}</td></tr><tr><td>Sicherheitscode</td><td>{{detailPatientController.patient.implantCardSecurity}}</td><td>Adresse</td><td>{{detailPatientController.patient.street}} {{detailPatientController.patient.zipcode}} {{detailPatientController.patient.city}}</td></tr><tr><td><strong>Erstellt am:</strong></td><td><strong>{{detailPatientController.patient.saveDate | date:"dd.MM.yyyy" }}</strong></td><td></td><td></td></tr></table></div><div class="row flex-box patient-institute-creator"><div class="col-lg-6 box-shadow bg-white" ng-if="detailPatientController.patient.institute"><table class="table table-hover table-striped table-fat-first-row"><tr><th colspan="2">Klinikdaten (des Benutzers)</th></tr><tr ng-if="detailPatientController.patient.institute.name"><td>Name</td><td>{{detailPatientController.patient.institute.name}}</td></tr><tr ng-if="detailPatientController.patient.institute.responsiblePerson.lastName"><td>Klinikverantw.</td><td>{{detailPatientController.patient.institute.responsiblePerson.lastName}}</td></tr><tr ng-if="detailPatientController.patient.institute.telephone"><td>Telefon</td><td>{{detailPatientController.patient.institute.telephone}}</td></tr><tr ng-if="detailPatientController.patient.institute.email"><td>Email</td><td>{{detailPatientController.patient.institute.email}}</td></tr><tr ng-if="detailPatientController.patient.institute.street || detailPatientController.patient.institute.zipcode || detailPatientController.patient.institute.city"><td>Adresse</td><td>{{detailPatientController.patient.institute.street}} {{detailPatientController.patient.institute.zipcode}} {{detailPatientController.patient.institute.city}}</td></tr></table></div><div class="col-lg-6 box-shadow bg-white" ng-if="detailPatientController.patient.creator"><table class="table table-hover table-striped table-fat-first-row"><tr><th colspan="2">Patient angelegt von</th></tr><tr ng-if="detailPatientController.patient.creator.gender"><td>Anrede</td><td>{{detailPatientController.patient.creator.gender}}</td></tr><tr ng-if="detailPatientController.patient.creator.lastName"><td>Nachname</td><td>{{detailPatientController.patient.creator.lastName}}</td></tr><tr ng-if="detailPatientController.patient.creator.firstName"><td>Vorname</td><td>{{detailPatientController.patient.creator.firstName}}</td></tr><tr ng-if="detailPatientController.patient.creator.telephone"><td>Telefon</td><td>{{detailPatientController.patient.creator.telephone}}</td></tr><tr ng-if="detailPatientController.patient.creator.mobile"><td>Mobile</td><td>{{detailPatientController.patient.creator.mobile}}</td></tr><tr ng-if="detailPatientController.patient.creator.email"><td>Email</td><td>{{detailPatientController.patient.creator.email}}</td></tr><tr ng-if="detailPatientController.patient.creator.street || detailPatientController.patient.creator.zipcode || detailPatientController.patient.creator.city"><td>Adresse</td><td>{{detailPatientController.patient.creator.street}} {{detailPatientController.patient.creator.zipcode}} {{detailPatientController.patient.creator.city}}</td></tr><tr ng-if="detailPatientController.patient.creator.permissionLevel"><td>Berechtigungsstufe</td><td>{{detailPatientController.patient.creator.permissionLevel}}</td></tr></table></div></div><div class="row box-shadow bg-white" ng-if="detailPatientController.patient.implants"><table class="table table-hover table-striped table-implant"><tr class="active"><th colspan="2">Implantate</th></tr><tr ng-repeat="implant in detailPatientController.patient.implants"><td>{{implant.saveDate | date:"dd.MM.yyyy"}} {{implant.art}}</td><td><a ui-sref="root.implantDetail({implantId: implant._id})"><i class="fa fa-2x fa-eye"></i></a></td></tr></table></div></div></section><ui-view name="update-patient-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-patients/update-patient/update-patient-lightbox.html",'<div ng-click="closeLightbox($event)" class="updateLightbox" ng-class="updateLightbox.active ? \'updateLightbox-active\' : \'updateLightbox-inactive\'" id="updateLightbox"><section class="section-update-patient container-fluid" id="lightbox-outer-wrapper"><div class="container container-last bg-white"><div class="row"><h2 class="col-lg-6">Patient updaten</h2></div><form name="patientDataForm" ng-submit="save()"><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Laufende Patientennummer</label> <input type="text" class="form-control" name="patientId" ng-model="updatePatientController.patientData.patientId" placeholder="laufende Patientennummer" required="" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.patientId.$error">Bitte laufende Patientennummer eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Implantatausweisnummer</label> <input type="text" class="form-control" name="implantCardNr" ng-model="updatePatientController.patientData.implantCardNr" placeholder="Nummer Implantatausweis" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.implantCardNr.$error">Bitte die Nummer des Implantatausweises eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Sicherheitscode Imoplantatausweis</label> <input type="text" class="form-control" name="implantCardSecurity" ng-model="updatePatientController.patientData.implantCardSecurity" placeholder="Implantatausweis Sicherheitsnummer" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.implantCardSecurity.$error">Bitte Implantatausweis Sicherheitsnummer eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Anrede</label><select class="form-control" name="gender" ng-model="updatePatientController.patientData.gender" required=""><option value="" disabled="" selected="" style="display:none;">Geschlecht auswählen</option><option value="Herr">Herr</option><option value="Frau">Frau</option></select><p class="help-block" ng-if="patientDataForm.gender.$error">Bitte Anrede auswählen!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Vorname</label> <input type="text" class="form-control" name="firstName" ng-model="updatePatientController.patientData.firstName" placeholder="Vornachname" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.firstName.$error">Bitte Vornamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Nachname</label> <input type="text" class="form-control" name="lastName" ng-model="updatePatientController.patientData.lastName" placeholder="Nachname" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.lastName.$error">Bitte Nachnamen eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Geburtsdatum</label> <input type="date" class="form-control" name="birthdate" ng-model="updatePatientController.patientData.birthdate" placeholder="Geburtsdatum YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.birthdate.$error">Ihre Geburtsdatum wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Versicherungsnummer</label> <input type="text" class="form-control" name="insurance" ng-model="updatePatientController.patientData.insurance" placeholder="Versicherungsnummer oder Krankenkasse" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.insurance.$error">Ihre Versicherungsnummer/Krankenkasse wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Versichertennummer</label> <input type="text" class="form-control" name="insurant" ng-model="updatePatientController.patientData.insurant" placeholder="Versichertennummer" ng-pattern="/^[0-9].*$/" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.insurant.$error">Ihre Versichertennummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Telefonnummer</label> <input type="tel" class="form-control" name="telephone" ng-model="updatePatientController.patientData.telephone" placeholder="Telefonnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.telephone.$error">Ihre Telefonnummer wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Handynummer</label> <input type="tel" class="form-control" name="mobile" ng-model="updatePatientController.patientData.mobile" placeholder="Mobilnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.mobile.$error">Ihre Mobilnummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Email</label> <input type="email" class="form-control" name="email" ng-model="updatePatientController.patientData.email" placeholder="Email-Addresse" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.email.$error">Ihre Email-Addresse wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="updatePatientController.patientData.street" placeholder="Straße / Hausnummer" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.street.$error">Ihre Straße + Hausnummer wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="updatePatientController.patientData.zipcode" placeholder="PLZ" ng-minlength="3" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="updatePatientController.patientData.city" placeholder="Stadt" ng-minlength="3" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Aufnahmedatum</label> <input type="date" class="form-control" name="saveDate" ng-model="updatePatientController.patientData.saveDate" placeholder="Datum Aufnahme YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="patientDataForm.saveDate.$error">Das Aufnahmedatum wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="updatePatientController.patientData.sendToEprd" not-defined="true" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="updatePatientController.patientData.sendToVitabook" not-defined="true" enter-to-tab=""></checkbox></div></div><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Patientendaten aktualisieren" ng-disabled="updatePatientController.buttonDisabled" ng-click="save($event)"></div></form></div></section></div>'),$templateCache.put("main/manage/manage-implants/update-implant/eprd.html",'<fieldset class="fieldset-eprd"><h4>Zusätzliche Daten für das EPRD</h4><div class="row"><div class="form-group col-lg-6"><label>Seite</label><select class="form-control" name="seite" ng-model="updateImplantController.implantData.eprd.seite" ng-options="seite.code as seite.name for seite in updateImplantController.eprdValues.seite"></select></div></div><div class="row"><div class="form-group col-lg-6"><label>Artikel Typ</label><select class="form-control" name="artikeltyp" ng-model="updateImplantController.implantData.eprd.artikeltyp" ng-options="artikeltyp.code as artikeltyp.name for artikeltyp in updateImplantController.eprdValues.artikeltyp"></select></div><div class="form-group col-lg-6"><label>Hersteller</label><select class="form-control" name="hersteller" ng-model="updateImplantController.implantData.eprd.hersteller" ng-options="hersteller.code as hersteller.name for hersteller in updateImplantController.eprdValues.hersteller"></select></div></div><div class="row"><div class="form-group col-lg-6"><label>Einheit</label><select class="form-control" name="einheit" ng-model="updateImplantController.implantData.eprd.einheit" ng-options="einheit.code as einheit.name for einheit in updateImplantController.eprdValues.einheit"></select></div><div class="form-group col-lg-6"><label>Eingriffart</label><select class="form-control" name="arteingriff" ng-model="updateImplantController.implantData.eprd.arteingriff" ng-options="arteingriff.code as arteingriff.name for arteingriff in updateImplantController.eprdValues.arteingriff"></select></div><div class="form-group col-lg-6" ng-if="updateImplantController.implantData.eprd.gelenk==\'1\' && updateImplantController.implantData.eprd.arteingriff==\'1\'"><label>Vor-Operation (Hüfte)</label><select class="form-control" name="vorOpHuefte" ng-model="updateImplantController.implantData.eprd.vorOpHuefte" ng-options="vorOpHuefte.code as vorOpHuefte.name for vorOpHuefte in updateImplantController.eprdValues.vorOpHuefte"></select></div><div class="form-group col-lg-6" ng-if="updateImplantController.implantData.eprd.gelenk==\'2\' && updateImplantController.implantData.eprd.arteingriff==\'1\'"><label>Vor-Operation (Knie)</label><select class="form-control" name="vorOpKnie" ng-model="updateImplantController.implantData.eprd.vorOpKnie" ng-options="vorOpKnie.code as vorOpKnie.name for vorOpKnie in updateImplantController.eprdValues.vorOpKnie"></select></div></div><div class="row"><div class="form-group col-lg-6" ng-if="updateImplantController.implantData.eprd.gelenk==\'1\' && updateImplantController.implantData.eprd.arteingriff==\'3\'"><label>Wechselgrund (Hüfte)</label><select class="form-control" name="wechselgrundHuefte" ng-model="updateImplantController.implantData.eprd.wechselgrundHuefte" ng-options="wechselgrundHuefte.code as wechselgrundHuefte.name for wechselgrundHuefte in updateImplantController.eprdValues.wechselgrundHuefte"></select></div><div class="form-group col-lg-6" ng-if="updateImplantController.implantData.eprd.gelenk==\'2\' && updateImplantController.implantData.eprd.arteingriff==\'3\'"><label>Wechselgrund (Knie)</label><select class="form-control" name="wechselgrundKnie" ng-model="updateImplantController.implantData.eprd.wechselgrundKnie" ng-options="wechselgrundKnie.code as wechselgrundKnie.name for wechselgrundKnie in updateImplantController.eprdValues.wechselgrundKnie"></select></div><div class="form-group col-lg-6" ng-if="updateImplantController.implantData.eprd.arteingriff==\'3\'"><label>Zweizeitwechsel</label><select class="form-control" name="zweizeitwechsel" ng-model="updateImplantController.implantData.eprd.zweizeitwechsel" ng-options="zweizeitwechsel.code as zweizeitwechsel.name for zweizeitwechsel in updateImplantController.eprdValues.zweizeitwechsel"></select></div></div></fieldset>'),
$templateCache.put("main/manage/manage-implants/update-implant/update-implant-lightbox.html",'<div ng-click="closeLightbox($event)" class="updateLightbox" ng-class="updateLightbox.active ? \'updateLightbox-active\' : \'updateLightbox-inactive\'" id="updateLightbox"><section class="section-update section-update-implant container-fluid" id="lightbox-outer-wrapper"><div class="container container-last bg-white"><div class="row"><h2 class="col-lg-6">Implantat updaten</h2></div><form name="implantDataForm" ng-submit="save()"><div class="row" ng-if="updateImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\'])"><patient-selector form="implantDataForm" model="updateImplantController.implantData.newPatient" eprd-patient="updateImplantController.eprdPatient"></patient-selector></div><div class="row"><div class="form-group col-lg-6"><label>Körperregion</label><select class="form-control" name="bodyPart" ng-model="updateImplantController.implantData.bodyPart" ng-options="bodyPart for bodyPart in updateImplantController.bodyParts" ng-change="updateImplantController.updateEprd()" required=""></select></div><autocomplete-implant model="updateImplantController.implantData.art" form="implantDataForm" itemname="art" label="Bezeichnung Implantat" size="col-lg-8" error-msg="Bitte Bezeichnung angeben!"></autocomplete-implant></div><div class="row"><autocomplete-implant model="updateImplantController.implantData.manufacturer" form="implantDataForm" itemname="manufacturer" label="Hersteller" size="col-lg-4" error-msg="Bitte Hersteller angeben!"></autocomplete-implant><autocomplete-implant model="updateImplantController.implantData.model" form="implantDataForm" itemname="model" label="Modell" size="col-lg-4" error-msg="Bitte Modell angeben!"></autocomplete-implant><autocomplete-implant model="updateImplantController.implantData.type" form="implantDataForm" itemname="type" label="Typ" size="col-lg-4" error-msg="Bitte Typ angeben!"></autocomplete-implant></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Losnummer (Lot)</label> <input type="text" class="form-control" name="lot" ng-model="updateImplantController.implantData.lot" placeholder="Losnummer (Lot)" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.lot.$error">Bitte Losnummer (Lot) als Zahlen ohne Buchstaben eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Seriennummer (SN)</label> <input type="number" class="form-control" name="serialNr" ng-model="updateImplantController.implantData.serialNr" placeholder="Seriennummer" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.serialNr.$error">Bitte Seriennummer als Zahlen ohne Buchstaben eingeben!</p></div><div class="form-group col-lg-4" show-errors=""><label>Referenznummer</label> <input type="text" class="form-control" name="referenceNr" ng-model="updateImplantController.implantData.referenceNr" placeholder="Referenznummer" required="" ng-pattern="/^\\d+$/" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.referenceNr.$error">Bitte Referenznummer als Zahlen ohne Buchstaben angeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Operations Nummer</label> <input type="text" class="form-control" name="operationId" ng-model="updateImplantController.implantData.operationId" placeholder="Operations Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.operationId.$error">Bitte Operations Nummer angeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Operations Name</label> <input type="text" class="form-control" name="operationName" ng-model="updateImplantController.implantData.operationName" placeholder="Operations Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.operationName.$error">Bitte Operations Name angeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Material Nr</label> <input type="text" class="form-control" name="materialNr" ng-model="updateImplantController.implantData.materialNr" placeholder="Material Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.materialNr.$error">Bitte Operations Nummer angeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Lagerort</label> <input type="text" class="form-control" name="storage" ng-model="updateImplantController.implantData.storage" placeholder="Operations Nummer" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.storage.$error">Bitte Lagerort angeben!</p></div></div><div class="row" ng-if="updateImplantController.checkPermission([\'superAdmin\', \'institute\'])"><div class="form-group col-lg-6"><label>Erfasser</label><select class="form-control" name="newCreator" ng-model="updateImplantController.implantData.newCreator" ng-options="coWorker._id as coWorker.lastName + \' \' + coWorker.firstName + \' (\' + coWorker.field + \')\' for coWorker in updateImplantController.coWorkers"></select><p class="help-block" ng-if="implantDataForm.newCreator.$error">Erfasser wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Name implantierende Einrichtung</label> <input type="text" class="form-control" name="instituteName" ng-model="updateImplantController.instituteName" placeholder="Name implantierende Einrichtung" ng-disabled="true"> <input type="hidden" class="form-control" name="institute" ng-model="updateImplantController.implantData.institute"><p class="help-block" ng-if="implantDataForm.institute.$error">Name der implantierenden Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6"><label>Art</label><select class="form-control" name="ImOrExplant" ng-model="updateImplantController.implantData.imOrExplant"><option value=""></option><option value="Implant">Implant</option><option value="Explant">Explant</option></select></div><div class="form-group col-lg-6" show-errors=""><label>Im-/Explantierungsdatum</label> <input type="date" class="form-control" name="saveDate" ng-model="updateImplantController.implantData.saveDate" placeholder="Im-/Explantierungsdatum YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.controllDate.$error">Im-/Explantierungsdatum wird benötigt!</p></div></div><div class="row controllDate"><div class="form-group col-lg-6"><label>Termin Kontrolluntersuchung</label><p class="help-block" ng-if="implantDataForm.controllDate.$error">Der Termin zur Kontrolluntersuchung wird benötigt!</p><select class="form-control" ng-model="updateImplantController.datePreset" ng-change="updateImplantController.setControllDate()"><option value="1">In einem Monat</option><option value="3">In drei Monaten</option><option value="6">In sechs Monaten</option><option value="12">In einem Jahr</option><option value="36">In drei Jahren</option></select></div><div class="form-group col-lg-6" show-errors=""><input type="date" class="form-control" name="controllDate" ng-model="updateImplantController.implantData.controllDate" placeholder="Datum Kontrolluntersuchung YYYY-MM-DD" required="" enter-to-tab=""><p class="help-block" ng-if="implantDataForm.controllDate.$error">Der Termin zur Kontrolluntersuchung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Kommentar</label> <textarea class="form-control" name="comment" ng-model="updateImplantController.implantData.comment" placeholder="Kommentar" enter-to-tab=""></textarea><p class="help-block" ng-if="implantDataForm.comment.$error">Bitte Kommentar eingeben!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="updateImplantController.implantData.sendToEprd" not-defined="true" ng-change="updateImplantController.checkEprdShow()" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="updateImplantController.implantData.sendToVitabook" not-defined="true" enter-to-tab=""></checkbox></div></div><ui-view name="eprd" ng-if="updateImplantController.showEprdOptions"></ui-view><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Implantat aktualisieren" ng-disabled="updateImplantController.buttonDisabled" ng-click="save($event)"></div></form></div></section></div>'),$templateCache.put("main/manage/manage-institutes/update-institute/update-institute-lightbox.html",'<div ng-click="closeLightbox($event)" class="updateLightbox section-manage" ng-class="updateLightbox.active ? \'updateLightbox-active\' : \'updateLightbox-inactive\'" id="updateLightbox"><section class="section-update-institute container-fluid" id="lightbox-outer-wrapper"><div class="container container-last bg-white"><div class="row"><h2 class="col-lg-6">Klinikdaten aktualisieren</h2></div><form name="instituteDataForm" ng-submit="save()"><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Url zum Register der Klinik</label> <input type="text" class="form-control" name="baseUrl" ng-model="updateInstituteController.instituteData.baseUrl" placeholder="Bsp. http://31.47.244.70:8080/" required=""><p class="help-block" ng-if="instituteDataForm.baseUrl.$error">Bitte Url des lokalen Registers eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Vitabook Id</label> <input type="tel" class="form-control" name="vitabookId" ng-model="updateInstituteController.instituteData.vitabookId" placeholder="Id der Klinik bei vitabook"><p class="help-block" ng-if="instituteDataForm.vitabookId.$error">Die vitabook-Id der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Name</label> <input type="text" class="form-control" name="name" ng-model="updateInstituteController.instituteData.name" placeholder="Name der Einrichtung"><p class="help-block" ng-if="instituteDataForm.name.$error">Bitte Institutsnamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Telefonnummer</label> <input type="tel" class="form-control" name="telephone" ng-model="updateInstituteController.instituteData.telephone" placeholder="Telefonnummer"><p class="help-block" ng-if="instituteDataForm.telephone.$error">Die Telefonnummer der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Email</label> <input type="email" class="form-control" name="email" ng-model="updateInstituteController.instituteData.email" placeholder="Email-Addresse" required=""><p class="help-block" ng-if="instituteDataForm.email.$error">Die Email-Addresse der Einrichtung wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="updateInstituteController.instituteData.street" placeholder="Straße / Hausnummer"><p class="help-block" ng-if="instituteDataForm.street.$error">Die Straße + Hausnummer der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="updateInstituteController.instituteData.zipcode" placeholder="PLZ" ng-minlength="3"><p class="help-block" ng-if="instituteDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="updateInstituteController.instituteData.city" placeholder="Stadt" ng-minlength="3"><p class="help-block" ng-if="instituteDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row"><div class="form-group col-lg-4"><label>Daten in das EPRD Register übertragen</label><checkbox name="sendToEprd" ng-model="updateInstituteController.instituteData.sendToEprd" enter-to-tab=""></checkbox></div><div class="form-group col-lg-4"><label>Daten zu vitabook übertragen</label><checkbox name="sendToVitabook" ng-model="updateInstituteController.instituteData.sendToVitabook" enter-to-tab=""></checkbox></div></div><fieldset class="fieldset-eprd" ng-if="updateInstituteController.instituteData.sendToEprd == true"><h4>EPRD</h4><div class="row"><div class="form-group col-lg-6" show-errors=""><label>EPRD Mandanten Nr</label> <input type="text" class="form-control" name="eprdClientNr" ng-model="updateInstituteController.instituteData.eprdClientNr" placeholder="EPRD Mandanten Nr"><p class="help-block" ng-if="instituteDataForm.eprdClientNr.$error">Die EPRD Mandanten Nr der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>EPRD Lizenznummer</label> <input type="text" class="form-control" name="eprdClientLizenz" ng-model="updateInstituteController.instituteData.eprdClientLizenz" placeholder="EPRD Lizenznummer"><p class="help-block" ng-if="instituteDataForm.eprdClientLizenz.$error">Bitte geben Sie die EPRD Lizenznummer an!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Einrichtungsnummer</label> <input type="text" class="form-control" name="locationNr" ng-model="updateInstituteController.instituteData.locationNr" placeholder="Einrichtungsnummer"><p class="help-block" ng-if="instituteDataForm.locationNr.$error">Die Einrichtungsnummer der Einrichtung wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Betriebsstätte</label> <input type="text" class="form-control" name="unitNr" ng-model="updateInstituteController.instituteData.unitNr" placeholder="Betriebsstätte"><p class="help-block" ng-if="instituteDataForm.unitNr.$error">Bitte geben Sie die Betriebsstätte an!</p></div></div></fieldset><div class="row text-center"><input type="submit" class="btn btn-cta btn-lg" value="Klinikdaten aktualisieren" ng-disabled="updateInstituteController.buttonDisabled" ng-click="save($event)"></div></form></div></section></div>'),$templateCache.put("main/manage/manage-implants/detail-implant/detail-implant.html",'<section class="section-detail section-detail-implant container-fluid" id="section-detail-patient"><div class="alert alert-danger text-center" ng-if="detailImplantController.implant == null" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Keine Berechtigung zum Einsehen dieser Implantatdaten!</div><div class="container" ng-if="detailImplantController.implant"><div class="row box-shadow bg-white"><table class="table table-hover table-striped table-fat-first-row table-implant"><tr class="active"><th colspan="3">{{detailImplantController.implant.art}}</th><th><a popover-template="\'main/manage/manage-implants/implant-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></th></tr><tr><td>Hersteller</td><td>{{detailImplantController.implant.manufacturer}}</td><td>Seriennummer</td><td>{{detailImplantController.implant.serialNr}}</td></tr><tr><td>Referenznummer</td><td>{{detailImplantController.implant.referenceNr}}</td><td>Implantiert am</td><td>{{detailImplantController.implant.saveDate | date:"dd.MM.yyyy"}}</td></tr><tr><td>Modell</td><td>{{detailImplantController.implant.model}}</td><td>Erfasser</td><td>{{detailImplantController.implant.creator.firstName}} {{detailImplantController.implant.creator.lastName}}</td></tr><tr><td>Typ</td><td>{{detailImplantController.implant.type}}</td><td>Kontrolldatum</td><td>{{detailImplantController.implant.controllDate | date:"dd.MM.yyyy"}}</td></tr><tr><td>Im-/Explantat</td><td>{{detailImplantController.implant.imOrExplant}}</td><td>Operations Nummer</td><td>{{detailImplantController.implant.operationId}}</td></tr><tr><td>Losnummer (Charge)</td><td>{{detailImplantController.implant.lot}}</td><td>Operations Name</td><td>{{detailImplantController.implant.operationName}}</td></tr></table></div><div class="row flex-box implant-patient-creator" ng-if="detailImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\', \'patient\'])"><div class="col-lg-6 box-shadow bg-white" ng-if="detailImplantController.implant.patient"><table class="table table-hover table-striped table-fat-first-row"><tr class="active"><th colspan="2">Patient</th></tr><tr ng-if="detailImplantController.implant.patient.patientId"><td>Patienten Id</td><td>{{detailImplantController.implant.patient.patientId}}</td></tr><tr ng-if="detailImplantController.implant.patient.insurance"><td>Versicherung</td><td>{{detailImplantController.implant.patient.insurance}}</td></tr><tr ng-if="detailImplantController.implant.patient.insurant"><td>Versicherten Nummer</td><td>{{detailImplantController.implant.patient.insurant}}</td></tr><tr ng-if="detailImplantController.implant.patient.gender"><td>Anrede</td><td>{{detailImplantController.implant.patient.gender}}</td></tr><tr ng-if="detailImplantController.implant.patient.lastName"><td>Nachname</td><td>{{detailImplantController.implant.patient.lastName}}</td></tr><tr ng-if="detailImplantController.implant.patient.firstName"><td>Vorname</td><td>{{detailImplantController.implant.patient.firstName}}</td></tr><tr ng-if="detailImplantController.implant.patient.birthdate"><td>Geburtsdatum</td><td>{{detailImplantController.implant.patient.birthdate | date:"dd.MM.yyyy" }}</td></tr><tr ng-if="detailImplantController.implant.patient.telephone"><td>Telefon</td><td>{{detailImplantController.implant.patient.telephone}}</td></tr><tr ng-if="detailImplantController.implant.patient.mobile"><td>Mobil</td><td>{{detailImplantController.implant.patient.mobile}}</td></tr><tr ng-if="detailImplantController.implant.patient.email"><td>Email</td><td>{{detailImplantController.implant.patient.email}}</td></tr><tr ng-if="detailImplantController.implant.patient.street"><td>Straße</td><td>{{detailImplantController.implant.patient.street}}</td></tr><tr ng-if="detailImplantController.implant.patient.zipcode"><td>Postleitzahl</td><td>{{detailImplantController.implant.patient.zipcode}}</td></tr><tr ng-if="detailImplantController.implant.patient.city"><td>Stadt</td><td>{{detailImplantController.implant.patient.city}}</td></tr><tr ng-if="detailImplantController.implant.patient.implantCardNr"><td>Implantatsausweisnummer</td><td>{{detailImplantController.implant.patient.implantCardNr}}</td></tr><tr ng-if="detailImplantController.implant.patient.implantCardSecurity"><td>Sicherheitscode Implantatausweis</td><td>{{detailImplantController.implant.patient.implantCardSecurity}}</td></tr></table></div><div class="col-lg-6 box-shadow bg-white" ng-if="detailImplantController.implant.creator && detailImplantController.checkPermission([\'superAdmin\', \'institute\', \'employee\'])"><table class="table table-hover table-striped table-fat-first-row"><tr class="active"><th colspan="2">Implantiert von {{detailImplantController.implant.creator.gender}} {{detailImplantController.implant.creator.firstName}} {{detailImplantController.implant.creator.lastName}}</th></tr><tr ng-if="detailImplantController.implant.creator.telephone"><td>Telefon</td><td>{{detailImplantController.implant.creator.telephone}}</td></tr><tr ng-if="detailImplantController.implant.creator.mobile"><td>Mobile</td><td>{{detailImplantController.implant.creator.mobile}}</td></tr><tr ng-if="detailImplantController.implant.creator.email"><td>Email</td><td>{{detailImplantController.implant.creator.email}}</td></tr><tr ng-if="detailImplantController.implant.creator.street || detailImplantController.implant.creator.zipcode || detailImplantController.implant.creator.city"><td>Adresse</td><td>{{detailImplantController.implant.creator.street}} {{detailImplantController.implant.creator.zipcode}} {{detailImplantController.implant.creator.city}}</td></tr><tr ng-if="detailImplantController.implant.creator.permissionLevel"><td>Berechtigungsstufe</td><td>{{detailImplantController.implant.creator.permissionLevel}}</td></tr></table></div></div></div></section><ui-view name="update-implant-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-institutes/detail-institute/detail-institute.html",'<section class="section-detail section-detail-institute container-fluid" id="section-detail-institute"><div class="alert alert-danger text-center" ng-if="detailInstituteController.institute == null" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Keine Berechtigung zum Einsehen dieser Klinikdaten!</div><div class="container" ng-if="detailInstituteController.institute"><div class="row box-shadow bg-white"><table class="table table-hover table-striped table-fat-first-row table-institute"><tr><th colspan="1">Klinikdaten</th><th><a href="" ng-click="openLightbox()"><i class="fa fa-2x fa-cog"></i></a></th></tr><tr ng-if="detailInstituteController.institute.instituteNr"><td>IK-Nummer</td><td>{{detailInstituteController.institute.instituteNr}}</td></tr><tr ng-if="detailInstituteController.institute.name"><td>Name</td><td>{{detailInstituteController.institute.name}}</td></tr><tr ng-if="detailInstituteController.institute.baseUrl"><td>Basis Url</td><td>{{detailInstituteController.institute.baseUrl}}</td></tr><tr ng-if="detailInstituteController.institute.telephone"><td>Telefon</td><td>{{detailInstituteController.institute.telephone}}</td></tr><tr ng-if="detailInstituteController.institute.fax"><td>Fax</td><td>{{detailInstituteController.institute.fax}}</td></tr><tr ng-if="detailInstituteController.institute.email"><td>Email</td><td>{{detailInstituteController.institute.email}}</td></tr><tr ng-if="detailInstituteController.institute.website"><td>Website</td><td>{{detailInstituteController.institute.website}}</td></tr><tr ng-if="detailInstituteController.institute.street"><td>Straße</td><td>{{detailInstituteController.institute.street}}</td></tr><tr ng-if="detailInstituteController.institute.zipcode"><td>Postleitzahl</td><td>{{detailInstituteController.institute.zipcode}}</td></tr><tr ng-if="detailInstituteController.institute.city"><td>Stadt</td><td>{{detailInstituteController.institute.city}}</td></tr><tr ng-if="detailInstituteController.institute.eprdClientNr"><td>Eprd Klienten Nummer</td><td>{{detailInstituteController.institute.eprdClientNr}}</td></tr><tr ng-if="detailInstituteController.institute.eprdClientLizenz"><td>Eprd Lizenzschlüssel</td><td>{{detailInstituteController.institute.eprdClientLizenz}}</td></tr></table></div><div class="row box-shadow bg-white" ng-if="detailInstituteController.institute.responsiblePerson"><table class="table table-hover table-striped table-fat-first-row"><tr class="active"><th colspan="2">Verantwortliche Person</th></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.lastName"><td>Klinikverantwortlicher</td><td>{{detailInstituteController.institute.responsiblePerson.gender}} {{detailInstituteController.institute.responsiblePerson.firstName}} {{detailInstituteController.institute.responsiblePerson.lastName}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.telephone"><td>Telefon</td><td>{{detailInstituteController.institute.responsiblePerson.telephone}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.mobile"><td>Mobiltelefon</td><td>{{detailInstituteController.institute.responsiblePerson.mobile}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.email"><td>Email</td><td>{{detailInstituteController.institute.responsiblePerson.email}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.street"><td>Straße</td><td>{{detailInstituteController.institute.responsiblePerson.street}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.zipcode"><td>Postleitzahl</td><td>{{detailInstituteController.institute.responsiblePerson.zipcode}}</td></tr><tr ng-if="detailInstituteController.institute.responsiblePerson.city"><td>Stadt</td><td>{{detailInstituteController.institute.responsiblePerson.city}}</td></tr></table></div></div></section><ui-view name="update-institute-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-users/detail-user/detail-user.html",'<section class="section-detail-user container-fluid" id="section-detail-user"><div class="alert alert-danger text-center" ng-if="detailUserController.user == null" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> <span class="sr-only">Achtung:</span> Keine Berechtigung zum Einsehen dieser Benutzerdaten!</div><div class="container container-last bg-white" ng-if="detailUserController.user"><div class="row"><h2 class="col-lg-6">Detailansicht Benutzer</h2></div><div class="row"><table class="table table-hover"><tr class="active"><th colspan="2">Benutzerdaten</th><th><a popover-template="\'main/manage/manage-users/user-edit-delete-bar.html\'" popover-trigger="focus" popover-placement="left" href=""><i class="fa fa-2x fa-cog"></i></a></th></tr><tr><td>Anrede</td><td>{{detailUserController.user.gender}}</td></tr><tr><td>Nachname</td><td>{{detailUserController.user.lastName}}</td></tr><tr><td>Vorname</td><td>{{detailUserController.user.firstName}}</td></tr><tr><td>Telefon</td><td>{{detailUserController.user.telephone}}</td></tr><tr><td>Mobile</td><td>{{detailUserController.user.mobile}}</td></tr><tr><td>Email</td><td>{{detailUserController.user.email}}</td></tr><tr><td>Straße</td><td>{{detailUserController.user.street}}</td></tr><tr><td>Postleitzahl</td><td>{{detailUserController.user.zipcode}}</td></tr><tr><td>Stadt</td><td>{{detailUserController.user.city}}</td></tr><tr><td>Berechtigungsstufe</td><td>{{detailUserController.user.permissionLevel}}</td></tr><tr><td>Anmeldestatus</td><td>{{detailUserController.user.active}}</td></tr></table></div><div class="row" ng-if="detailUserController.user.institute"><table class="table table-hover"><tr class="active"><th colspan="2">Klinikdaten (des Benutzers)</th></tr><tr><td>Name</td><td>{{detailUserController.user.institute.name}}</td></tr><tr><td>Klinikverantwortlicher</td><td>{{detailUserController.user.institute.responsiblePerson.lastName}}</td></tr><tr><td>Telefon</td><td>{{detailUserController.user.institute.telephone}}</td></tr><tr><td>Email</td><td>{{detailUserController.user.institute.email}}</td></tr><tr><td>Straße</td><td>{{detailUserController.user.institute.street}}</td></tr><tr><td>Postleitzahl</td><td>{{detailUserController.user.institute.zipcode}}</td></tr><tr><td>Stadt</td><td>{{detailUserController.user.institute.city}}</td></tr></table></div></div></section><ui-view name="update-user-lightbox"></ui-view>'),$templateCache.put("main/manage/manage-users/update-user/update-user-lightbox.html",'<div ng-click="closeLightbox($event)" class="updateLightbox" ng-class="updateLightbox.active ? \'updateLightbox-active\' : \'updateLightbox-inactive\'" id="updateLightbox"><section class="section-register-user container-fluid" id="lightbox-outer-wrapper"><div class="container container-last bg-white"><div class="row"><h2 class="col-lg-6">Benutzer updaten</h2></div><form name="userDataForm" ng-submit="save()"><input type="hidden" class="form-control" name="institute" ng-model="updateUserController.userData.institute" placeholder="InstitutId"><div class="row"><div class="form-group col-lg-6"><label>Anrede</label><select class="form-control" name="gender" ng-model="updateUserController.userData.gender" placeholder="Geschlecht"><option value="" disabled="" selected="" style="display:none;">Geschlecht auswählen</option><option value="Herr">Herr</option><option value="Frau">Frau</option></select><p class="help-block" ng-if="userDataForm.gender.$error">Bitte Anrede auswählen!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Vorname</label> <input type="text" class="form-control" name="firstName" ng-model="updateUserController.userData.firstName" placeholder="Vornachname"><p class="help-block" ng-if="userDataForm.firstName.$error">Bitte Vornamen eingeben!</p></div><div class="form-group col-lg-6" show-errors=""><label>Nachname</label> <input type="text" class="form-control" name="lastName" ng-model="updateUserController.userData.lastName" placeholder="Nachname" required=""><p class="help-block" ng-if="userDataForm.lastName.$error">Bitte Nachnamen eingeben!</p></div></div><div class="row"><div class="form-group col-lg-6" ng-if="updateUserController.checkPermission([\'superAdmin\', \'institute\'])"><label>Berechtigungslevel</label><select class="form-control" name="permissionLevel" ng-model="updateUserController.userData.permissionLevel"><option value="" disabled="" selected="" style="display:none;">Berechtigungslevel auswählen</option><option ng-if="updateUserController.checkPermission(\'superAdmin\')" value="superAdmin">Super Admin</option><option ng-if="updateUserController.checkPermission([\'superAdmin\'])" value="national">Nationale Ebene</option><option ng-if="updateUserController.checkPermission([\'superAdmin\'])" value="nationalField">Nationale Ebene, Fachbereich</option><option ng-if="updateUserController.checkPermission(\'superAdmin\')" value="institute">Klinik Ebene</option><option ng-if="updateUserController.checkPermission([\'superAdmin\', \'institute\'])" value="employee">Arzt/Assistent Ebene (mit Lesefunktion)</option><option ng-if="updateUserController.checkPermission([\'superAdmin\', \'institute\'])" value="employee-auto">Arzt/Assistent Ebene (nur Erfassen)</option></select><p class="help-block" ng-if="userDataForm.permissionLevel.$error">Bitte Berechtigungslevel auswählen!</p></div><div class="form-group col-lg-6" show-errors=""><label>Fachgebiet</label> <input type="text" class="form-control" name="field" ng-model="updateUserController.userData.field" placeholder="Abteilung"><p class="help-block" ng-if="userDataForm.field.$error">Bitte Abteilung angeben!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Telefonnummer</label> <input type="tel" class="form-control" name="telephone" ng-model="updateUserController.userData.telephone" placeholder="Telefonnummer"><p class="help-block" ng-if="userDataForm.telephone.$error">Ihre Telefonnummer wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label>Handynummer</label> <input type="tel" class="form-control" name="mobile" ng-model="updateUserController.userData.mobile" placeholder="Mobilnummer"><p class="help-block" ng-if="userDataForm.mobile.$error">Ihre Mobilnummer wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-12" show-errors=""><label>Email</label> <input type="email" class="form-control" name="email" ng-model="updateUserController.userData.email" placeholder="Email-Addresse" required=""><p class="help-block" ng-if="userDataForm.email.$error">Ihre Email-Addresse wird benötigt!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Straße + Hausnummer</label> <input type="text" class="form-control" name="street" ng-model="updateUserController.userData.street" placeholder="Straße / Hausnummer"><p class="help-block" ng-if="userDataForm.street.$error">Ihre Straße + Hausnummer wird benötigt!</p></div><div class="form-group col-lg-2" show-errors=""><label>Postleitzahl</label> <input type="text" class="form-control" name="zipcode" ng-model="updateUserController.userData.zipcode" placeholder="PLZ" ng-minlength="3"><p class="help-block" ng-if="userDataForm.zipcode.$error">Bitte geben Sie die PLZ an!</p></div><div class="form-group col-lg-4" show-errors=""><label>Stadt</label> <input type="text" class="form-control" name="city" ng-model="updateUserController.userData.city" placeholder="Stadt" ng-minlength="3"><p class="help-block" ng-if="userDataForm.city.$error">Bitte geben Sie die Stadt an!</p></div></div><div class="row"><div class="form-group col-lg-6" show-errors=""><label>Passwort des Benutzers</label> <input type="password" class="form-control" name="password" ng-model="updateUserController.userData.password" placeholder="Neues User Passwort"><p class="help-block" ng-if="userDataForm.password.$error">Das Passwort wird benötigt!</p></div><div class="form-group col-lg-6" show-errors=""><label ng-if="updateUserController.ownUser != true">Eigenes Passwort</label> <label ng-if="updateUserController.ownUser == true">Altes Passwort</label> <input type="password" class="form-control" name="ownPassword" ng-model="updateUserController.userData.ownPassword" placeholder="Eigenes Passwort"><p class="help-block" ng-if="userDataForm.ownPassword.$error">Ihr Passwort wird benötigt!</p></div></div><div class="row text-center button-wrapper"><input type="submit" ng-disabled="updateUserController.updateButtonDisabled" ng-click="save($event)" class="btn btn-cta btn-lg" value="Mitarbeiterdaten aktualisieren"></div></form></div></section></div>');

}]);